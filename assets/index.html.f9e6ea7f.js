import{_ as e,r as p,o,c,a as n,b as s,d as t,e as i}from"./app.4659d0e0.js";const l={},u=n("h1",{id:"python-scrapy爬虫",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#python-scrapy爬虫","aria-hidden":"true"},"#"),s(" Python - scrapy爬虫")],-1),r={href:"https://docs.scrapy.org/zh/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://github.com/scrapy/scrapy",target:"_blank",rel:"noopener noreferrer"},k=i(`<h2 id="_1-demo" tabindex="-1"><a class="header-anchor" href="#_1-demo" aria-hidden="true">#</a> 1. demo</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> scrapy

<span class="token keyword">class</span> <span class="token class-name">QuotesSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>
    name <span class="token operator">=</span> <span class="token string">&#39;quotes&#39;</span>
    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token string">&#39;http://quotes.toscrape.com/tag/humor/&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>

    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> quote <span class="token keyword">in</span> response<span class="token punctuation">.</span>css<span class="token punctuation">(</span><span class="token string">&#39;div.quote&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">yield</span> <span class="token punctuation">{</span>
                <span class="token string">&#39;author&#39;</span><span class="token punctuation">:</span> quote<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;span/small/text()&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string">&#39;text&#39;</span><span class="token punctuation">:</span> quote<span class="token punctuation">.</span>css<span class="token punctuation">(</span><span class="token string">&#39;span.text::text&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function v(h,m){const a=p("ExternalLinkIcon");return o(),c("div",null,[u,n("blockquote",null,[n("p",null,[n("a",r,[s("scrapy API"),t(a)]),s(" | "),n("a",d,[s("开源project-github"),t(a)])])]),k])}const b=e(l,[["render",v],["__file","index.html.vue"]]);export{b as default};
