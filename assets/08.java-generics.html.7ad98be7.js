const l=JSON.parse('{"key":"v-00d7043a","path":"/md/rd/basic/java/java-basic/08.java-generics.html","title":"Oracle Java 泛型","lang":"zh-CN","frontmatter":{},"excerpt":"","headers":[{"level":2,"title":"为什么使用泛型？","slug":"为什么使用泛型","link":"#为什么使用泛型","children":[]},{"level":2,"title":"泛型类型","slug":"泛型类型","link":"#泛型类型","children":[{"level":3,"title":"一个简单的Box类","slug":"一个简单的box类","link":"#一个简单的box类","children":[]},{"level":3,"title":"Box类的通用版本","slug":"box类的通用版本","link":"#box类的通用版本","children":[]},{"level":3,"title":"类型参数命名惯例","slug":"类型参数命名惯例","link":"#类型参数命名惯例","children":[]},{"level":3,"title":"调用和实例化泛型类型","slug":"调用和实例化泛型类型","link":"#调用和实例化泛型类型","children":[]},{"level":3,"title":"钻石","slug":"钻石","link":"#钻石","children":[]},{"level":3,"title":"多个类型参数","slug":"多个类型参数","link":"#多个类型参数","children":[]},{"level":3,"title":"参数化类型","slug":"参数化类型","link":"#参数化类型","children":[]},{"level":3,"title":"原始类型","slug":"原始类型","link":"#原始类型","children":[]}]},{"level":2,"title":"泛型方法","slug":"泛型方法","link":"#泛型方法","children":[]},{"level":2,"title":"受限的类型参数","slug":"受限的类型参数","link":"#受限的类型参数","children":[{"level":3,"title":"多个边界","slug":"多个边界","link":"#多个边界","children":[]},{"level":3,"title":"泛型方法和有界类型参数","slug":"泛型方法和有界类型参数","link":"#泛型方法和有界类型参数","children":[]}]},{"level":2,"title":"泛型、继承和子类型","slug":"泛型、继承和子类型","link":"#泛型、继承和子类型","children":[{"level":3,"title":"泛型类和子类型","slug":"泛型类和子类型","link":"#泛型类和子类型","children":[]}]},{"level":2,"title":"类型推断","slug":"类型推断","link":"#类型推断","children":[{"level":3,"title":"类型推理和泛型方法","slug":"类型推理和泛型方法","link":"#类型推理和泛型方法","children":[]},{"level":3,"title":"泛型类的类型推理和实例化","slug":"泛型类的类型推理和实例化","link":"#泛型类的类型推理和实例化","children":[]},{"level":3,"title":"泛型类和非泛型类的类型推理和泛型构造函数","slug":"泛型类和非泛型类的类型推理和泛型构造函数","link":"#泛型类和非泛型类的类型推理和泛型构造函数","children":[]},{"level":3,"title":"目标类型","slug":"目标类型","link":"#目标类型","children":[]}]},{"level":2,"title":"通配符","slug":"通配符","link":"#通配符","children":[{"level":3,"title":"上限通配符","slug":"上限通配符","link":"#上限通配符","children":[]},{"level":3,"title":"无边界通配符","slug":"无边界通配符","link":"#无边界通配符","children":[]},{"level":3,"title":"下限通配符","slug":"下限通配符","link":"#下限通配符","children":[]},{"level":3,"title":"通配符和子类型","slug":"通配符和子类型","link":"#通配符和子类型","children":[]},{"level":3,"title":"通配符捕获和帮助程序方法","slug":"通配符捕获和帮助程序方法","link":"#通配符捕获和帮助程序方法","children":[]},{"level":3,"title":"通配符使用指南","slug":"通配符使用指南","link":"#通配符使用指南","children":[]}]},{"level":2,"title":"类型擦除","slug":"类型擦除","link":"#类型擦除","children":[{"level":3,"title":"通用类型的擦除","slug":"通用类型的擦除","link":"#通用类型的擦除","children":[]},{"level":3,"title":"通用方法的擦除","slug":"通用方法的擦除","link":"#通用方法的擦除","children":[]},{"level":3,"title":"类型擦除和桥接方法的影响","slug":"类型擦除和桥接方法的影响","link":"#类型擦除和桥接方法的影响","children":[]},{"level":3,"title":"桥接方法","slug":"桥接方法","link":"#桥接方法","children":[]},{"level":3,"title":"不可具体化的类型","slug":"不可具体化的类型","link":"#不可具体化的类型","children":[]}]},{"level":2,"title":"泛型的限制","slug":"泛型的限制","link":"#泛型的限制","children":[{"level":3,"title":"无法使用原始类型实例化泛型类型","slug":"无法使用原始类型实例化泛型类型","link":"#无法使用原始类型实例化泛型类型","children":[]},{"level":3,"title":"无法创建类型参数的实例","slug":"无法创建类型参数的实例","link":"#无法创建类型参数的实例","children":[]},{"level":3,"title":"不能声明类型为类型参数的静态字段","slug":"不能声明类型为类型参数的静态字段","link":"#不能声明类型为类型参数的静态字段","children":[]},{"level":3,"title":"不能对参数化类型使用 Casts 或 instanceof","slug":"不能对参数化类型使用-casts-或-instanceof","link":"#不能对参数化类型使用-casts-或-instanceof","children":[]},{"level":3,"title":"无法创建参数化类型的数组","slug":"无法创建参数化类型的数组","link":"#无法创建参数化类型的数组","children":[]},{"level":3,"title":"无法创建、捕获或抛出参数化类型的对象","slug":"无法创建、捕获或抛出参数化类型的对象","link":"#无法创建、捕获或抛出参数化类型的对象","children":[]},{"level":3,"title":"无法重载每个重载的形式参数类型擦除为相同原始类型的方法","slug":"无法重载每个重载的形式参数类型擦除为相同原始类型的方法","link":"#无法重载每个重载的形式参数类型擦除为相同原始类型的方法","children":[]}]}],"git":{"updatedTime":1679985736000,"contributors":[{"name":"guoshunfa","email":"13301203454@163.com","commits":1},{"name":"郭顺发","email":"13301203454@163.com","commits":1}]},"filePathRelative":"md/rd/basic/java/java-basic/08.java-generics.md"}');export{l as data};
