import{_ as n,o as s,c as a,e as p}from"./app.4659d0e0.js";const t={},e=p(`<h1 id="spring框架-packageinfo的使用" tabindex="-1"><a class="header-anchor" href="#spring框架-packageinfo的使用" aria-hidden="true">#</a> Spring框架 - PackageInfo的使用</h1><h2 id="场景" tabindex="-1"><a class="header-anchor" href="#场景" aria-hidden="true">#</a> 场景</h2><p>以包(package)为范围进行配置。如：将注解直接加到包的维度。</p><h2 id="创建package-info-java" tabindex="-1"><a class="header-anchor" href="#创建package-info-java" aria-hidden="true">#</a> 创建package-info.java</h2><ol><li>使用eclipse进行创建包时，可以勾选“Create package-info.java”按钮，进行创建。</li><li>如果创建包时没有创建package-info.java，只能在包对应文件夹里，手动创建一个package-info.java，写上包名，最后刷新ide即可。</li></ol><h2 id="package-info-java的使用" tabindex="-1"><a class="header-anchor" href="#package-info-java的使用" aria-hidden="true">#</a> package-info.java的使用</h2><ol><li>提供包级别的类(或接口)，这些类(或接口)只有本包里才能访问，即使是子包也不能访问。</li><li>提供包的整体注释说明。</li></ol><p>package-info.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**   
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>package-info不是平常类，其作用有三个:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>   
 * 1、为标注在包上Annotation提供便利；<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>   
 * 2、声明包的私有类和常量；<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>   
 * 3、提供包的整体注释说明。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>   
*/</span>   
<span class="token annotation punctuation">@JyzTargetPackage</span><span class="token punctuation">(</span>version<span class="token operator">=</span><span class="token string">&quot;1.0&quot;</span><span class="token punctuation">)</span>  
<span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>jyz<span class="token punctuation">.</span>study<span class="token punctuation">.</span>jdk<span class="token punctuation">.</span>annotation</span><span class="token punctuation">;</span>  
  
<span class="token keyword">class</span> <span class="token class-name">PackageInfo</span><span class="token punctuation">{</span>  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">common</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;sa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>  
  
<span class="token keyword">class</span> <span class="token class-name">PackageInfoGeneric</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">Throwable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>  
    <span class="token keyword">private</span> <span class="token class-name">T</span> obj<span class="token punctuation">;</span>  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">T</span> obj<span class="token punctuation">)</span><span class="token punctuation">{</span>  
        <span class="token keyword">this</span><span class="token punctuation">.</span>obj <span class="token operator">=</span> obj<span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">common</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj <span class="token operator">+</span> <span class="token string">&quot;sa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>  
  
<span class="token keyword">interface</span> packageInfoInteger<span class="token punctuation">{</span>  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>  
  
<span class="token keyword">class</span> <span class="token class-name">PackageConstants</span><span class="token punctuation">{</span>  
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">ERROE_CODE</span> <span class="token operator">=</span> <span class="token string">&quot;100001&quot;</span><span class="token punctuation">;</span>   
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>TestPackageInfo.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>jyz<span class="token punctuation">.</span>study<span class="token punctuation">.</span>jdk<span class="token punctuation">.</span>annotation</span><span class="token punctuation">;</span>  
  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>  
  
<span class="token doc-comment comment">/** 
 * 测试package-info.java文件的作用 
 * 1、为标注在包上Annotation提供便利；<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>   
 * 2、声明包的私有类和常量；<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>   
 * <span class="token keyword">@author</span> JoyoungZhang@gmail.com 
 * 
 */</span>  
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestPackageInfo</span> <span class="token punctuation">{</span>  
  
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token comment">//1  </span>
        <span class="token class-name">Package</span> p <span class="token operator">=</span> <span class="token class-name">Package</span><span class="token punctuation">.</span><span class="token function">getPackage</span><span class="token punctuation">(</span><span class="token string">&quot;com.jyz.study.jdk.annotation&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">if</span><span class="token punctuation">(</span>p <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">isAnnotationPresent</span><span class="token punctuation">(</span><span class="token class-name">JyzTargetPackage</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  
            <span class="token class-name">JyzTargetPackage</span> nav <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">JyzTargetPackage</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token keyword">if</span><span class="token punctuation">(</span>nav <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;package version:&quot;</span> <span class="token operator">+</span> nav<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token punctuation">}</span>  
        <span class="token punctuation">}</span>  
        <span class="token comment">//2  </span>
        <span class="token class-name">PackageInfo</span> packageInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PackageInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        packageInfo<span class="token punctuation">.</span><span class="token function">common</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token comment">//泛型也能很好的工作，在pakcage-info.java里定义的类和普通类没什么区别  </span>
        <span class="token class-name">PackageInfoGeneric</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Exception</span><span class="token punctuation">&gt;</span></span> packageInfoGeneric <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PackageInfoGeneric</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Exception</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        packageInfoGeneric<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">IOException</span><span class="token punctuation">(</span><span class="token string">&quot;device io&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        packageInfoGeneric<span class="token punctuation">.</span><span class="token function">common</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">Sub</span> sub <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sub</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        sub<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">PackageConstants</span><span class="token punctuation">.</span><span class="token constant">ERROE_CODE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>  
  
<span class="token keyword">class</span> <span class="token class-name">Sub</span> <span class="token keyword">implements</span> packageInfoInteger<span class="token punctuation">{</span>  
    <span class="token annotation punctuation">@Override</span>  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;sub&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Console output</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>package version:1.0  
sa  
java.io.IOException: device iosa  
sub  
100001  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意两点</p><ol><li>package-info.java里不能声明public class(或 interface)</li><li>刚开始p.isAnnotationPresent(JyzTargetPackage.class)返回false，后来找到原因JyzTargetPackage没有加上@Retention(RetentionPolicy.RUNTIME)。</li></ol>`,15),c=[e];function o(l,i){return s(),a("div",null,c)}const k=n(t,[["render",o],["__file","index.html.vue"]]);export{k as default};
