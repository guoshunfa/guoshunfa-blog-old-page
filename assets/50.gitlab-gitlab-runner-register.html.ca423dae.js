import{_ as l,r as o,o as i,c as r,a as n,b as s,d as a,e as t}from"./app.4659d0e0.js";const c={},p=t('<h1 id="gitlab-gitlabrunner注册" tabindex="-1"><a class="header-anchor" href="#gitlab-gitlabrunner注册" aria-hidden="true">#</a> Gitlab - GitlabRunner注册</h1><blockquote><p>官方地址：https://docs.gitlab.com/runner/register/</p></blockquote><p>注册运行器是将运行器与一个或多个GitLab实例绑定的过程。</p><p>您可以通过重复<code>register</code>命令在同一台主机上注册多个运行器，每个运行器配置不同。</p><h2 id="要求" tabindex="-1"><a class="header-anchor" href="#要求" aria-hidden="true">#</a> 要求</h2><p>在注册跑步者之前，您必须首先：</p>',6),u={href:"https://docs.gitlab.com/runner/install/index.html",target:"_blank",rel:"noopener noreferrer"},d={href:"https://docs.gitlab.com/ee/ci/runners/runners_scope.html#shared-runners",target:"_blank",rel:"noopener noreferrer"},v=n("strong",null,"概述>运行器",-1),b={href:"https://docs.gitlab.com/ee/ci/runners/runners_scope.html#group-runners",target:"_blank",rel:"noopener noreferrer"},m=n("strong",null,"设置>CI/CD",-1),k=n("strong",null,"跑步者",-1),g={href:"https://docs.gitlab.com/ee/ci/runners/runners_scope.html#specific-runners",target:"_blank",rel:"noopener noreferrer"},h=n("strong",null,"设置>CI/CD",-1),_=n("strong",null,"运行器",-1),f=n("p",null,[s("在GitLab.com上注册跑步者时，"),n("code",null,"gitlab-ci coordinator URL"),s("是"),n("code",null,"https://gitlab.com"),s("。")],-1),q=n("h2",{id:"docker",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#docker","aria-hidden":"true"},"#"),s(" Docker")],-1),x={href:"https://docs.gitlab.com/runner/install/docker.html",target:"_blank",rel:"noopener noreferrer"},L=n("em",null,"后",-1),R=n("p",null,[s("以下步骤描述了启动一个短寿命的"),n("code",null,"gitlab-runner"),s("容器来注册您在安装期间创建的容器。完成注册后，生成的配置将写入您选择的配置卷（例如，"),n("code",null,"/srv/gitlab-runner/config"),s("），并由运行器使用该配置卷加载。")],-1),E=n("p",null,"要使用Docker容器注册运行器：",-1),G=t(`<li><p>根据挂载类型运行register命令：</p><p>对于本地系统卷装载：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--rm</span> <span class="token parameter variable">-it</span> <span class="token parameter variable">-v</span> /srv/gitlab-runner/config:/etc/gitlab-runner gitlab/gitlab-runner register
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果您在安装过程中使用了<code>/srv/gitlab-runner/config</code>以外的配置卷，请务必使用正确的卷更新命令。</p><p>对于Docker卷挂载：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--rm</span> <span class="token parameter variable">-it</span> <span class="token parameter variable">-v</span> gitlab-runner-config:/etc/gitlab-runner gitlab/gitlab-runner:latest register
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>输入您的GitLab实例URL（也称为<code>gitlab-ci coordinator URL</code>）。</p></li><li><p>输入您获得的令牌以注册跑步者。</p></li><li><p>输入跑步者的描述。您可以稍后在GitLab用户界面中更改此值。</p></li>`,4),y={href:"https://docs.gitlab.com/ee/ci/runners/configure_runners.html#use-tags-to-control-which-jobs-a-runner-can-run",target:"_blank",rel:"noopener noreferrer"},D=n("li",null,[n("p",null,"输入跑步者的任何可选维护备注。")],-1),w={href:"https://docs.gitlab.com/runner/executors/index.html",target:"_blank",rel:"noopener noreferrer"},T=n("code",null,"docker",-1),C=n("li",null,[n("p",null,[s("如果您输入"),n("code",null,"docker"),s("作为执行人，系统会要求您将默认映像用于未在"),n("code",null,".gitlab-ci.yml"),s("中定义一个的项目。")])],-1),O=n("h2",{id:"linux",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#linux","aria-hidden":"true"},"#"),s(" Linux")],-1),A=n("p",null,"要在Linux下注册运行器：",-1),F=t(`<li><p>运行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> gitlab-runner register
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果您在代理后面，请添加环境变量，然后运行注册命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">HTTP_PROXY</span><span class="token operator">=</span>http://yourproxyurl:3128
<span class="token builtin class-name">export</span> <span class="token assign-left variable">HTTPS_PROXY</span><span class="token operator">=</span>http://yourproxyurl:3128

<span class="token function">sudo</span> <span class="token parameter variable">-E</span> gitlab-runner register
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>输入您的GitLab实例URL（也称为<code>gitlab-ci coordinator URL</code>）。</p></li><li><p>输入您获得的令牌以注册跑步者。</p></li><li><p>输入跑步者的描述。您可以稍后在GitLab用户界面中更改此值。</p></li>`,4),I={href:"https://docs.gitlab.com/ee/ci/runners/configure_runners.html#use-tags-to-control-which-jobs-a-runner-can-run",target:"_blank",rel:"noopener noreferrer"},U=n("li",null,[n("p",null,"输入跑步者的任何可选维护备注。")],-1),N={href:"https://docs.gitlab.com/runner/executors/index.html",target:"_blank",rel:"noopener noreferrer"},M=n("code",null,"docker",-1),P=n("li",null,[n("p",null,[s("如果您输入"),n("code",null,"docker"),s("作为执行人，系统会要求您将默认映像用于未在"),n("code",null,".gitlab-ci.yml"),s("中定义一个的项目。")])],-1),S=n("h2",{id:"macos",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#macos","aria-hidden":"true"},"#"),s(" macOS")],-1),K={href:"https://docs.docker.com/docker-for-mac/install/",target:"_blank",rel:"noopener noreferrer"},j=n("p",null,"要在macOS下注册运行器：",-1),B=t(`<li><p>运行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gitlab-runner register
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>输入您的GitLab实例URL（也称为<code>gitlab-ci coordinator URL</code>）。</p></li><li><p>输入您获得的令牌以注册跑步者。</p></li><li><p>输入跑步者的描述。您可以稍后在GitLab用户界面中更改此值。</p></li>`,4),$={href:"https://docs.gitlab.com/ee/ci/runners/configure_runners.html#use-tags-to-control-which-jobs-a-runner-can-run",target:"_blank",rel:"noopener noreferrer"},H=n("li",null,[n("p",null,"输入跑步者的任何可选维护备注。")],-1),V={href:"https://docs.gitlab.com/runner/executors/index.html",target:"_blank",rel:"noopener noreferrer"},J=n("code",null,"docker",-1),W=n("li",null,[n("p",null,[s("如果您输入"),n("code",null,"docker"),s("作为执行人，系统将要求您将默认映像用于未定义"),n("code",null,".gitlab-ci.yml"),s("的项目。")])],-1),X=n("h2",{id:"窗户",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#窗户","aria-hidden":"true"},"#"),s(" 窗户")],-1),Y=n("p",null,"要在Windows下注册运行器：",-1),z=t(`<li><p>运行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>.<span class="token punctuation">\\</span>gitlab-runner.exe register
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>输入您的GitLab实例URL（也称为<code>gitlab-ci coordinator URL</code>）。</p></li><li><p>输入您获得的令牌以注册跑步者。</p></li><li><p>输入跑步者的描述。您可以稍后在GitLab用户界面中更改此值。</p></li>`,4),Q={href:"https://docs.gitlab.com/ee/ci/runners/configure_runners.html#use-tags-to-control-which-jobs-a-runner-can-run",target:"_blank",rel:"noopener noreferrer"},Z=n("li",null,[n("p",null,"输入跑步者的任何可选维护备注。")],-1),nn={href:"https://docs.gitlab.com/runner/executors/index.html",target:"_blank",rel:"noopener noreferrer"},sn=n("code",null,"docker",-1),en=n("li",null,[n("p",null,[s("如果您输入"),n("code",null,"docker"),s("作为执行人，系统会要求您将默认映像用于未在"),n("code",null,".gitlab-ci.yml"),s("中定义一个的项目。")])],-1),an=n("h2",{id:"freebsd",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#freebsd","aria-hidden":"true"},"#"),s(" FreeBSD")],-1),tn=n("p",null,"要在FreeBSD下注册跑步者：",-1),ln=t(`<li><p>运行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token parameter variable">-u</span> gitlab-runner <span class="token parameter variable">-H</span> /usr/local/bin/gitlab-runner register
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>输入您的GitLab实例URL（也称为<code>gitlab-ci coordinator URL</code>）。</p></li><li><p>输入您获得的令牌以注册跑步者。</p></li><li><p>输入跑步者的描述。您可以稍后在GitLab用户界面中更改此值。</p></li>`,4),on={href:"https://docs.gitlab.com/ee/ci/runners/configure_runners.html#use-tags-to-control-which-jobs-a-runner-can-run",target:"_blank",rel:"noopener noreferrer"},rn=n("li",null,[n("p",null,"输入跑步者的任何可选维护备注。")],-1),cn={href:"https://docs.gitlab.com/runner/executors/index.html",target:"_blank",rel:"noopener noreferrer"},pn=n("code",null,"docker",-1),un=n("li",null,[n("p",null,[s("如果您输入"),n("code",null,"docker"),s("作为执行人，系统会要求您将默认映像用于未在"),n("code",null,".gitlab-ci.yml"),s("中定义一个的项目。")])],-1),dn=t(`<h2 id="一行注册命令" tabindex="-1"><a class="header-anchor" href="#一行注册命令" aria-hidden="true">#</a> 一行注册命令</h2><p>如果您想使用非交互式模式注册运行器，您可以使用<code>register</code>子命令或使用其等效的环境变量。</p><p>要显示所有<code>register</code>子命令的列表，请运行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gitlab-runner register <span class="token parameter variable">-h</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>要使用最常见的选项注册跑步者，您将执行以下操作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> gitlab-runner register <span class="token punctuation">\\</span>
  --non-interactive <span class="token punctuation">\\</span>
  <span class="token parameter variable">--url</span> <span class="token string">&quot;https://gitlab.com/&quot;</span> <span class="token punctuation">\\</span>
  --registration-token <span class="token string">&quot;PROJECT_REGISTRATION_TOKEN&quot;</span> <span class="token punctuation">\\</span>
  <span class="token parameter variable">--executor</span> <span class="token string">&quot;docker&quot;</span> <span class="token punctuation">\\</span>
  --docker-image alpine:latest <span class="token punctuation">\\</span>
  <span class="token parameter variable">--description</span> <span class="token string">&quot;docker-runner&quot;</span> <span class="token punctuation">\\</span>
  --maintenance-note <span class="token string">&quot;Free-form maintainer notes about this runner&quot;</span> <span class="token punctuation">\\</span>
  --tag-list <span class="token string">&quot;docker,aws&quot;</span> <span class="token punctuation">\\</span>
  --run-untagged<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> <span class="token punctuation">\\</span>
  <span class="token parameter variable">--locked</span><span class="token operator">=</span><span class="token string">&quot;false&quot;</span> <span class="token punctuation">\\</span>
  --access-level<span class="token operator">=</span><span class="token string">&quot;not_protected&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果您在Docker容器中运行运行器，则<code>register</code>命令的结构类似于以下内容：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--rm</span> <span class="token parameter variable">-v</span> /srv/gitlab-runner/config:/etc/gitlab-runner gitlab/gitlab-runner register <span class="token punctuation">\\</span>
  --non-interactive <span class="token punctuation">\\</span>
  <span class="token parameter variable">--executor</span> <span class="token string">&quot;docker&quot;</span> <span class="token punctuation">\\</span>
  --docker-image alpine:latest <span class="token punctuation">\\</span>
  <span class="token parameter variable">--url</span> <span class="token string">&quot;https://gitlab.com/&quot;</span> <span class="token punctuation">\\</span>
  --registration-token <span class="token string">&quot;PROJECT_REGISTRATION_TOKEN&quot;</span> <span class="token punctuation">\\</span>
  <span class="token parameter variable">--description</span> <span class="token string">&quot;docker-runner&quot;</span> <span class="token punctuation">\\</span>
  --maintenance-note <span class="token string">&quot;Free-form maintainer notes about this runner&quot;</span> <span class="token punctuation">\\</span>
  --tag-list <span class="token string">&quot;docker,aws&quot;</span> <span class="token punctuation">\\</span>
  --run-untagged<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> <span class="token punctuation">\\</span>
  <span class="token parameter variable">--locked</span><span class="token operator">=</span><span class="token string">&quot;false&quot;</span> <span class="token punctuation">\\</span>
  --access-level<span class="token operator">=</span><span class="token string">&quot;not_protected&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),vn=n("code",null,"--access-level",-1),bn={href:"https://docs.gitlab.com/ee/ci/runners/configure_runners.html#prevent-runners-from-revealing-sensitive-information",target:"_blank",rel:"noopener noreferrer"},mn={href:"https://docs.gitlab.com/ee/ci/runners/configure_runners.html#prevent-runners-from-revealing-sensitive-information",target:"_blank",rel:"noopener noreferrer"},kn=n("code",null,'--access-level="ref_protected"',-1),gn=n("code",null,'--access-level="not_protected"',-1),hn=n("strong",null,"设置>CI/CD",-1),_n=n("code",null,"--maintenance-note",-1),fn={href:"https://gitlab.com/gitlab-org/gitlab-runner/-/merge_requests/3268",target:"_blank",rel:"noopener noreferrer"},qn=t('<h2 id="check-registration-token错误" tabindex="-1"><a class="header-anchor" href="#check-registration-token错误" aria-hidden="true">#</a> <code>Check registration token</code>错误</h2><p>当GitLab实例无法识别输入的注册令牌时，将显示<code>check registration token</code>注册令牌错误消息。当实例组或项目注册令牌在GitLab中更改或用户未正确输入注册令牌时，可能会出现此问题。</p><p>发生此错误时，第一步是要求GitLab管理员验证注册令牌是否有效。</p><h2 id="runners-配置模板文件" tabindex="-1"><a class="header-anchor" href="#runners-配置模板文件" aria-hidden="true">#</a> <code>[[runners]]</code>配置模板文件</h2>',4),xn={href:"https://gitlab.com/gitlab-org/gitlab-runner/-/issues/4228",target:"_blank",rel:"noopener noreferrer"},Ln=n("p",null,"某些运行器配置设置无法使用环境变量或命令行选项进行设置。",-1),Rn=n("p",null,"例如：",-1),En=n("ul",null,[n("li",null,"环境变量不支持切片。"),n("li",null,"命令行选项支持故意不适用于整个Kubernetes执行器卷树的设置。")],-1),Gn={href:"https://docs.gitlab.com/runner/install/kubernetes.html",target:"_blank",rel:"noopener noreferrer"},yn=n("code",null,"config.toml",-1),Dn=t("<p>这个问题可以通过使用<em>配置模板文件</em>来解决。</p><p>要使用配置文件模板文件，请传递文件的路径以<code>register</code>：</p><ul><li><code>--template-config</code>命令行选项。</li><li><code>TEMPLATE_CONFIG_FILE</code>环境变量。</li></ul><p>配置模板文件支持：</p>",4),wn={href:"https://docs.gitlab.com/runner/configuration/advanced-configuration.html#the-runners-section",target:"_blank",rel:"noopener noreferrer"},Tn=n("code",null,"[[runners\\]]",-1),Cn=n("li",null,"没有全局选项。",-1),On=t(`<p>当使用<code>--template-config</code>或<code>TEMPLATE_CONFIG_FILE</code>时，<code>[[runners]]</code>条目的配置将合并到常规<code>config.toml</code>文件中新创建的<code>[[runners]]</code>条目的配置中。</p><p>合并仅适用于<em>空</em>的选项。那就是：</p><ul><li>空的绳子。</li><li>无效或/不存在条目。</li><li>零。</li></ul><p>有了这个：</p><ul><li><code>register</code>命令调用期间，所有配备命令行选项和/或环境变量的配置都优先。</li><li>该模板填补了空白，并添加了其他设置。</li></ul><h3 id="例子" tabindex="-1"><a class="header-anchor" href="#例子" aria-hidden="true">#</a> 例子</h3><p>我们将基于Kubernetes执行器的运行器注册到一些测试项目，并查看<code>config.toml</code>文件的样子：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">sudo</span> gitlab-runner register <span class="token punctuation">\\</span>
     <span class="token parameter variable">--config</span> /tmp/test-config.toml <span class="token punctuation">\\</span>
     --non-interactive <span class="token punctuation">\\</span>
     <span class="token parameter variable">--url</span> https://gitlab.com <span class="token punctuation">\\</span>
     --registration-token __REDACTED__ <span class="token punctuation">\\</span>
     <span class="token parameter variable">--name</span> test-runner <span class="token punctuation">\\</span>
     --tag-list kubernetes,test <span class="token punctuation">\\</span>
     <span class="token parameter variable">--locked</span> <span class="token punctuation">\\</span>
     <span class="token parameter variable">--paused</span> <span class="token punctuation">\\</span>
     <span class="token parameter variable">--executor</span> kubernetes <span class="token punctuation">\\</span>
     --kubernetes-host http://localhost:9876/

Runtime platform                                    <span class="token assign-left variable">arch</span><span class="token operator">=</span>amd64 <span class="token assign-left variable">os</span><span class="token operator">=</span>linux <span class="token assign-left variable">pid</span><span class="token operator">=</span><span class="token number">1684</span> <span class="token assign-left variable">revision</span><span class="token operator">=</span><span class="token number">88310882</span> <span class="token assign-left variable">version</span><span class="token operator">=</span><span class="token number">11.10</span>.0~beta.1251.g88310882

Registering runner<span class="token punctuation">..</span>. succeeded                     <span class="token assign-left variable">runner</span><span class="token operator">=</span>__REDACTED__
Runner registered successfully. Feel <span class="token function">free</span> to start it, but <span class="token keyword">if</span> it&#39;s running already the config should be automatically reloaded<span class="token operator">!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的命令创建以下<code>config.toml</code>文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>concurrent <span class="token operator">=</span> <span class="token number">1</span>
check_interval <span class="token operator">=</span> <span class="token number">0</span>

<span class="token punctuation">[</span>session_server<span class="token punctuation">]</span>
  session_timeout <span class="token operator">=</span> <span class="token number">1800</span>

<span class="token punctuation">[</span><span class="token punctuation">[</span>runners<span class="token punctuation">]</span><span class="token punctuation">]</span>
  name <span class="token operator">=</span> <span class="token string">&quot;test-runner&quot;</span>
  url <span class="token operator">=</span> <span class="token string">&quot;https://gitlab.com&quot;</span>
  token <span class="token operator">=</span> <span class="token string">&quot;__REDACTED__&quot;</span>
  executor <span class="token operator">=</span> <span class="token string">&quot;kubernetes&quot;</span>
  <span class="token punctuation">[</span>runners.cache<span class="token punctuation">]</span>
    <span class="token punctuation">[</span>runners.cache.s3<span class="token punctuation">]</span>
    <span class="token punctuation">[</span>runners.cache.gcs<span class="token punctuation">]</span>
  <span class="token punctuation">[</span>runners.kubernetes<span class="token punctuation">]</span>
    <span class="token function">host</span> <span class="token operator">=</span> <span class="token string">&quot;http://localhost:9876/&quot;</span>
    bearer_token_overwrite_allowed <span class="token operator">=</span> <span class="token boolean">false</span>
    image <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
    namespace <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
    namespace_overwrite_allowed <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
    privileged <span class="token operator">=</span> <span class="token boolean">false</span>
    service_account_overwrite_allowed <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
    pod_annotations_overwrite_allowed <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
    <span class="token punctuation">[</span>runners.kubernetes.volumes<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以看到从提供的命令行选项创建的基本配置：</p><ul><li>运行器凭据（URL和令牌）。</li><li>指定了遗嘱执行人。</li><li>默认的空部分<code>runners.kubernetes</code>，在注册期间只提供了一个选项。</li></ul><p>通常，人们必须再设置几个选项才能使Kubernetes执行器可用，但上述内容就足以让我们的例子而言。</p><p>现在假设我们必须为我们的Kubernetes执行器配置一个<code>emptyDir</code>卷。在注册环境变量或命令行选项时，无法添加此内容。我们必须<strong>手动将</strong>这样的东西<strong>附加</strong>到文件的末尾：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span><span class="token punctuation">[</span>runners.kubernetes.volumes.empty_dir<span class="token punctuation">]</span><span class="token punctuation">]</span>
  name <span class="token operator">=</span> <span class="token string">&quot;empty_dir&quot;</span>
  mount_path <span class="token operator">=</span> <span class="token string">&quot;/path/to/empty_dir&quot;</span>
  medium <span class="token operator">=</span> <span class="token string">&quot;Memory&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),An={href:"https://github.com/toml-lang/toml",target:"_blank",rel:"noopener noreferrer"},Fn=n("code",null,"[[runners]]",-1),In=n("code",null,"config.toml",-1),Un=t(`<p>使用GitLab Runner 12.2，使用<code>--template-config</code>标志会容易得多。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">cat</span> <span class="token operator">&gt;</span> /tmp/test-config.template.toml <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
[[runners]]
  [runners.kubernetes]
    [runners.kubernetes.volumes]
      [[runners.kubernetes.volumes.empty_dir]]
        name = &quot;empty_dir&quot;
        mount_path = &quot;/path/to/empty_dir&quot;
        medium = &quot;Memory&quot;
EOF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>有了这个文件，我们现在可以尝试再次注册运行器，但这次添加了<code>--template-config /tmp/test-config.template.toml</code>选项。除了此更改外，注册命令的其余部分完全相同：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">sudo</span> gitlab-runner register <span class="token punctuation">\\</span>
     <span class="token parameter variable">--config</span> /tmp/test-config.toml <span class="token punctuation">\\</span>
     --template-config /tmp/test-config.template.toml <span class="token punctuation">\\</span>
     --non-interactive <span class="token punctuation">\\</span>
     <span class="token parameter variable">--url</span> https://gitlab.com <span class="token punctuation">\\</span>
     --registration-token __REDACTED__ <span class="token punctuation">\\</span>
     <span class="token parameter variable">--name</span> test-runner <span class="token punctuation">\\</span>
     --tag-list kubernetes,test <span class="token punctuation">\\</span>
     <span class="token parameter variable">--locked</span> <span class="token punctuation">\\</span>
     <span class="token parameter variable">--paused</span> <span class="token punctuation">\\</span>
     <span class="token parameter variable">--executor</span> kubernetes <span class="token punctuation">\\</span>
     --kubernetes-host http://localhost:9876/

Runtime platform                                    <span class="token assign-left variable">arch</span><span class="token operator">=</span>amd64 <span class="token assign-left variable">os</span><span class="token operator">=</span>linux <span class="token assign-left variable">pid</span><span class="token operator">=</span><span class="token number">8798</span> <span class="token assign-left variable">revision</span><span class="token operator">=</span><span class="token number">88310882</span> <span class="token assign-left variable">version</span><span class="token operator">=</span><span class="token number">11.10</span>.0~beta.1251.g88310882

Registering runner<span class="token punctuation">..</span>. succeeded                     <span class="token assign-left variable">runner</span><span class="token operator">=</span>__REDACTED__
Merging configuration from template <span class="token function">file</span>
Runner registered successfully. Feel <span class="token function">free</span> to start it, but <span class="token keyword">if</span> it&#39;s running already the config should be automatically reloaded<span class="token operator">!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>As we can see, there is a little change in the output of the registration command. We can see a <code>Merging configuration from template file</code> line.</p><p>现在让我们看看使用模板后配置文件是什么样子的：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>concurrent <span class="token operator">=</span> <span class="token number">1</span>
check_interval <span class="token operator">=</span> <span class="token number">0</span>

<span class="token punctuation">[</span>session_server<span class="token punctuation">]</span>
  session_timeout <span class="token operator">=</span> <span class="token number">1800</span>

<span class="token punctuation">[</span><span class="token punctuation">[</span>runners<span class="token punctuation">]</span><span class="token punctuation">]</span>
  name <span class="token operator">=</span> <span class="token string">&quot;test-runner&quot;</span>
  url <span class="token operator">=</span> <span class="token string">&quot;https://gitlab.com&quot;</span>
  token <span class="token operator">=</span> <span class="token string">&quot;__REDACTED__&quot;</span>
  executor <span class="token operator">=</span> <span class="token string">&quot;kubernetes&quot;</span>
  <span class="token punctuation">[</span>runners.cache<span class="token punctuation">]</span>
    <span class="token punctuation">[</span>runners.cache.s3<span class="token punctuation">]</span>
    <span class="token punctuation">[</span>runners.cache.gcs<span class="token punctuation">]</span>
  <span class="token punctuation">[</span>runners.kubernetes<span class="token punctuation">]</span>
    <span class="token function">host</span> <span class="token operator">=</span> <span class="token string">&quot;http://localhost:9876/&quot;</span>
    bearer_token_overwrite_allowed <span class="token operator">=</span> <span class="token boolean">false</span>
    image <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
    namespace <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
    namespace_overwrite_allowed <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
    privileged <span class="token operator">=</span> <span class="token boolean">false</span>
    service_account_overwrite_allowed <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
    pod_annotations_overwrite_allowed <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
    <span class="token punctuation">[</span>runners.kubernetes.volumes<span class="token punctuation">]</span>

      <span class="token punctuation">[</span><span class="token punctuation">[</span>runners.kubernetes.volumes.empty_dir<span class="token punctuation">]</span><span class="token punctuation">]</span>
        name <span class="token operator">=</span> <span class="token string">&quot;empty_dir&quot;</span>
        mount_path <span class="token operator">=</span> <span class="token string">&quot;/path/to/empty_dir&quot;</span>
        medium <span class="token operator">=</span> <span class="token string">&quot;Memory&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以看到，配置几乎和以前一样。唯一的变化是，它现在有<code>[[runners.kubernetes.volumes.empty_dir]]</code>条目，其选项位于文件末尾。它被添加到注册创建的<code>[[runners]]</code>条目中。由于整个文件是用相同的机制保存的，所以我们也有适当的缩进。</p><p>如果配置模板包含设置，并且将相同的设置传递给<code>register</code>命令，则传递给<code>register</code>命令的设置优先于配置模板中指定的设置。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">cat</span> <span class="token operator">&gt;</span> /tmp/test-config.template.toml <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
[[runners]]
  executor = &quot;docker&quot;
EOF</span>

$ <span class="token function">sudo</span> gitlab-runner register <span class="token punctuation">\\</span>
     <span class="token parameter variable">--config</span> /tmp/test-config.toml <span class="token punctuation">\\</span>
     --template-config /tmp/test-config.template.toml <span class="token punctuation">\\</span>
     --non-interactive <span class="token punctuation">\\</span>
     <span class="token parameter variable">--url</span> https://gitlab.com <span class="token punctuation">\\</span>
     --registration-token __REDACTED__ <span class="token punctuation">\\</span>
     <span class="token parameter variable">--name</span> test-runner <span class="token punctuation">\\</span>
     --tag-list shell,test <span class="token punctuation">\\</span>
     <span class="token parameter variable">--locked</span> <span class="token punctuation">\\</span>
     <span class="token parameter variable">--paused</span> <span class="token punctuation">\\</span>
     <span class="token parameter variable">--executor</span> shell

Runtime platform                                    <span class="token assign-left variable">arch</span><span class="token operator">=</span>amd64 <span class="token assign-left variable">os</span><span class="token operator">=</span>linux <span class="token assign-left variable">pid</span><span class="token operator">=</span><span class="token number">12359</span> <span class="token assign-left variable">revision</span><span class="token operator">=</span><span class="token number">88310882</span> <span class="token assign-left variable">version</span><span class="token operator">=</span><span class="token number">11.10</span>.0~beta.1251.g88310882

Registering runner<span class="token punctuation">..</span>. succeeded                     <span class="token assign-left variable">runner</span><span class="token operator">=</span>__REDACTED__
Merging configuration from template <span class="token function">file</span>
Runner registered successfully. Feel <span class="token function">free</span> to start it, but <span class="token keyword">if</span> it&#39;s running already the config should be automatically reloaded<span class="token operator">!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>正如我们所看到的，注册命令指定了<code>shell</code>执行器，而模板包含<code>docker</code>一个。让我们看看最终配置内容是什么：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>concurrent <span class="token operator">=</span> <span class="token number">1</span>
check_interval <span class="token operator">=</span> <span class="token number">0</span>

<span class="token punctuation">[</span>session_server<span class="token punctuation">]</span>
  session_timeout <span class="token operator">=</span> <span class="token number">1800</span>

<span class="token punctuation">[</span><span class="token punctuation">[</span>runners<span class="token punctuation">]</span><span class="token punctuation">]</span>
  name <span class="token operator">=</span> <span class="token string">&quot;test-runner&quot;</span>
  url <span class="token operator">=</span> <span class="token string">&quot;https://gitlab.com&quot;</span>
  token <span class="token operator">=</span> <span class="token string">&quot;__REDACTED__&quot;</span>
  executor <span class="token operator">=</span> <span class="token string">&quot;shell&quot;</span>
  <span class="token punctuation">[</span>runners.cache<span class="token punctuation">]</span>
    <span class="token punctuation">[</span>runners.cache.s3<span class="token punctuation">]</span>
    <span class="token punctuation">[</span>runners.cache.gcs<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>带有<code>register</code>命令选项的配置集优先，并被选择放置在最终配置中。</p>`,13);function Nn(Mn,Pn){const e=o("ExternalLinkIcon");return i(),r("div",null,[p,n("ul",null,[n("li",null,[s("在与安装GitLab的位置分开的服务器上"),n("a",u,[s("安装它"),a(e)])]),n("li",null,[s("获取令牌： "),n("ul",null,[n("li",null,[s("对于"),n("a",d,[s("共享运行器"),a(e)]),s("，请管理员转到GitLab管理区域，然后单击"),v]),n("li",null,[s("对于"),n("a",b,[s("小组跑步者"),a(e)]),s("，请转到"),m,s("并展开"),k,s("部分")]),n("li",null,[s("对于"),n("a",g,[s("特定于项目的运行器"),a(e)]),s("，请转到"),h,s("并展开"),_,s("部分")])])])]),f,q,n("p",null,[s("本节中的说明适用于您在"),n("a",x,[s("容器中安装GitLab Runner"),a(e)]),L,s("。")]),R,E,n("ol",null,[G,n("li",null,[n("p",null,[s("输入"),n("a",y,[s("与运行器关联的标签"),a(e)]),s("，用逗号分隔。您可以稍后在GitLab用户界面中更改此值。")])]),D,n("li",null,[n("p",null,[s("提供"),n("a",w,[s("运行器执行器"),a(e)]),s("。对于大多数用例，请输入"),T,s("。")])]),C]),O,A,n("ol",null,[F,n("li",null,[n("p",null,[s("输入"),n("a",I,[s("与运行器关联的标签"),a(e)]),s("，用逗号分隔。您可以稍后在GitLab用户界面中更改此值。")])]),U,n("li",null,[n("p",null,[s("提供"),n("a",N,[s("运行器执行器"),a(e)]),s("。对于大多数用例，请输入"),M,s("。")])]),P]),S,n("p",null,[s("在macOS下注册运行器之前，请先安装"),n("a",K,[s("Docker.app"),a(e)]),s("。")]),j,n("ol",null,[B,n("li",null,[n("p",null,[s("输入"),n("a",$,[s("与运行器关联的标签"),a(e)]),s("，用逗号分隔。您可以稍后在GitLab用户界面中更改此值。")])]),H,n("li",null,[n("p",null,[s("提供"),n("a",V,[s("运行器执行器"),a(e)]),s("。对于大多数用例，请输入"),J,s("。")])]),W]),X,Y,n("ol",null,[z,n("li",null,[n("p",null,[s("输入"),n("a",Q,[s("与运行器关联的标签"),a(e)]),s("，用逗号分隔。您可以稍后在GitLab用户界面中更改此值。")])]),Z,n("li",null,[n("p",null,[s("提供"),n("a",nn,[s("运行器执行器"),a(e)]),s("。对于大多数用例，请输入"),sn,s("。")])]),en]),an,tn,n("ol",null,[ln,n("li",null,[n("p",null,[s("输入"),n("a",on,[s("与运行器关联的标签"),a(e)]),s("，用逗号分隔。您可以稍后在GitLab用户界面中更改此值。")])]),rn,n("li",null,[n("p",null,[s("提供"),n("a",cn,[s("运行器执行器"),a(e)]),s("。对于大多数用例，请输入"),pn,s("。")])]),un]),dn,n("p",null,[vn,s("参数已在GitLab Runner 12.0中添加。它使用GitLab 11.11中引入的注册API参数。在注册期间使用此参数创建"),n("a",bn,[s("受保护"),a(e)]),s("的"),n("a",mn,[s("运行器"),a(e)]),s("。对于受保护的运行器，请使用"),kn,s("参数。对于不受保护的运行器，请使用"),gn,s("或者不定义该值。此值稍后可以在项目的"),hn,s("菜单中打开或关闭。")]),n("p",null,[_n,s("参数已在GitLab Runner 14.8"),n("a",fn,[s("中添加"),a(e)]),s("。您可以使用它来添加与运行器维护相关的信息。允许的最大长度为255个字符。")]),qn,n("p",null,[s("在GitLab Runner 12.2中"),n("a",xn,[s("介绍"),a(e)]),s("。")]),Ln,Rn,En,n("p",null,[s("对于由任何类型的自动化处理的环境来说，这是一个问题，例如"),n("a",Gn,[s("GitLab Runner官方Helm图表"),a(e)]),s("。在此类情况下，唯一的解决方案是在运行器注册后手动更新"),yn,s("文件。这不太理想，容易出错，也不可靠。特别是当为同一GitLab Runner安装完成多个注册时。")]),Dn,n("ul",null,[n("li",null,[s("只有单个"),n("a",wn,[Tn,a(e)]),s("部分。")]),Cn]),On,n("p",null,[s("由于"),n("a",An,[s("TOML"),a(e)]),s("不需要适当的缩进（它依赖于条目排序），我们只需将所需的更改附加到文件末尾即可。然而，当更多"),Fn,s("部分在 oneconfig"),In,s("文件中注册时，这会变得棘手。假设新的总是在最后是有风险的。")]),Un])}const Kn=l(c,[["render",Nn],["__file","50.gitlab-gitlab-runner-register.html.vue"]]);export{Kn as default};
