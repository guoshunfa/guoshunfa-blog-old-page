import{_ as r,r as o,o as c,c as t,a as e,b as a,d as s,e as d}from"./app.4659d0e0.js";const i={},l=e("h1",{id:"docker-介绍",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#docker-介绍","aria-hidden":"true"},"#"),a(" Docker - 介绍")],-1),p={href:"https://hub.docker.com",target:"_blank",rel:"noopener noreferrer"},h={href:"https://docs.docker.com/",target:"_blank",rel:"noopener noreferrer"},u=e("h2",{id:"_1-简介",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-简介","aria-hidden":"true"},"#"),a(" 1. 简介")],-1),k=e("p",null,"​ Docker是一个开源的引擎，可以轻松的为任何应用创建一个轻量级的、可移植的、自给自足的容器。开发者在笔记本上编译测试通过的容器可以批量地在生产环境中部署，包括VMs（虚拟机）、bare metal、OpenStack 集群和其他的基础应用平台。",-1),m={href:"http://www.whatis.com.cn/word_5275.htm",target:"_blank",rel:"noopener noreferrer"},_=d(`<h2 id="_2-适用场景" tabindex="-1"><a class="header-anchor" href="#_2-适用场景" aria-hidden="true">#</a> 2. 适用场景</h2><p>Docker通常用于如下场景：</p><ul><li>web应用的自动化打包和发布；</li><li>自动化测试和持续集成、发布；</li><li>在服务型环境中部署和调整数据库或其他的后台应用；</li><li>从头编译或者扩展现有的OpenShift或Cloud Foundry平台来搭建自己的PaaS环境。</li></ul><h2 id="_3-安装" tabindex="-1"><a class="header-anchor" href="#_3-安装" aria-hidden="true">#</a> 3. 安装</h2><h3 id="_3-1-使用yum安装" tabindex="-1"><a class="header-anchor" href="#_3-1-使用yum安装" aria-hidden="true">#</a> 3.1. 使用yum安装</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum update <span class="token comment"># 更新yum</span>
yum <span class="token function">install</span> <span class="token function">docker</span> <span class="token comment"># 安装docker</span>
systemctl start docker.service <span class="token comment"># 启动docker</span>
<span class="token function">docker</span> version <span class="token comment"># 查看docker版本，验证是否安装成功</span>
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span> <span class="token comment"># 设置开机自启动</span>
<span class="token comment"># 结束</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-使用brew安装" tabindex="-1"><a class="header-anchor" href="#_3-2-使用brew安装" aria-hidden="true">#</a> 3.2. 使用brew安装</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> brew <span class="token function">install</span> <span class="token parameter variable">--cask</span> <span class="token parameter variable">--appdir</span><span class="token operator">=</span>/Applications <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>mac的安装，执行完命令后需要打开docker的App，授权后才能使用。</p></blockquote>`,9);function b(v,f){const n=o("ExternalLinkIcon");return c(),t("div",null,[l,e("blockquote",null,[e("p",null,[e("a",p,[a("docker 库"),s(n)]),a(" | "),e("a",h,[a("docker 官方文档"),s(n)])])]),u,k,e("p",null,[a("​ Docker是一个开源的引擎，可以轻松的为任何应用创建一个轻量级的、可移植的、自给自足的容器。开发者在笔记本上编译测试通过的容器可以批量地在生产环境中部署，包括VMs（虚拟机）、 "),e("a",m,[a("bare metal"),s(n)]),a("、OpenStack 集群和其他的基础应用平台。")]),_])}const g=r(i,[["render",b],["__file","01.docker-introduce.html.vue"]]);export{g as default};
