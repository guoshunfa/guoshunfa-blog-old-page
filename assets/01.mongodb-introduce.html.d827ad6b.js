import{_ as o,r as t,o as i,c as l,a as n,b as s,d as e,e as r}from"./app.4659d0e0.js";const d={},c=n("h1",{id:"mongodb-介绍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mongodb-介绍","aria-hidden":"true"},"#"),s(" MongoDB - 介绍")],-1),p={href:"https://docs.mongodb.com",target:"_blank",rel:"noopener noreferrer"},u={href:"https://mongodb.net.cn",target:"_blank",rel:"noopener noreferrer"},m={href:"https://docs.mongoing.com/mongodb-crud-operations",target:"_blank",rel:"noopener noreferrer"},g={href:"https://mongoing.com",target:"_blank",rel:"noopener noreferrer"},b=r(`<h2 id="_1-mongodb-运维" tabindex="-1"><a class="header-anchor" href="#_1-mongodb-运维" aria-hidden="true">#</a> 1. MongoDB 运维</h2><h2 id="_1-安装-mongodb" tabindex="-1"><a class="header-anchor" href="#_1-安装-mongodb" aria-hidden="true">#</a> 1. 安装 MongoDB</h2><h3 id="_1-1-mac-安装-mongodb" tabindex="-1"><a class="header-anchor" href="#_1-1-mac-安装-mongodb" aria-hidden="true">#</a> 1.1. Mac 安装 MongoDB</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 安装mongodb数据库</span>
brew tap mongodb/brew
brew <span class="token function">install</span> mongodb-community@4.4
<span class="token comment"># 启动服务</span>
brew services start mongodb-community@4.4
<span class="token comment"># ps 查看服务使用情况</span>
<span class="token function">ps</span> aux <span class="token operator">|</span> <span class="token function">grep</span> mongo
<span class="token comment"># brew services 查看服务使用情况</span>
brew services <span class="token operator">|</span> <span class="token function">grep</span> mongo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-mongodb-配置文件说明" tabindex="-1"><a class="header-anchor" href="#_2-mongodb-配置文件说明" aria-hidden="true">#</a> 2. MongoDB 配置文件说明</h2><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">storage</span><span class="token punctuation">:</span>
  <span class="token comment"># mongod 进程存储数据目录，此配置仅对 mongod 进程有效</span>
  <span class="token key atrule">dbPath</span><span class="token punctuation">:</span> /data/mongodb/db
  <span class="token comment"># 是否开启 journal 日志持久存储，journal 日志用来数据恢复，是 mongod 最基础的特性，通常用于故障恢复。64 位系统默认为 true，32 位默认为 false，建议开启，仅对 mongod 进程有效。</span>
  <span class="token key atrule">journal</span><span class="token punctuation">:</span>
    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
 <span class="token comment"># 存储引擎类型，mongodb 3.0 之后支持 “mmapv1”、“wiredTiger” 两种引擎，默认值为“mmapv1”；官方宣称 wiredTiger 引擎更加优秀。</span>
  <span class="token key atrule">engine</span><span class="token punctuation">:</span> wiredTiger
    <span class="token comment"># 如下配置仅对 wiredTiger 引擎生效（3.0 以上版本）  </span>
    <span class="token key atrule">wiredTiger</span><span class="token punctuation">:</span>
      <span class="token comment"># wiredTiger 缓存工作集（working set）数据的内存大小，单位：GB</span>
      <span class="token comment"># 此值决定了 wiredTiger 与 mmapv1 的内存模型不同，它可以限制 mongod 对内存的使用量，而 mmapv1 则不能（依赖于系统级的 mmap）。默认情况下，cacheSizeGB 的值为假定当前节点只部署一个 mongod 实例，此值的大小为物理内存的一半；如果当前节点部署了多个 mongod 进程，那么需要合理配置此值。如果 mongod 部署在虚拟容器中（比如，lxc，cgroups，Docker）等，它将不能使用整个系统的物理内存，则需要适当调整此值。默认值为物理内存的一半。</span>
      <span class="token key atrule">engineConfig</span><span class="token punctuation">:</span>
          <span class="token key atrule">cacheSizeGB</span><span class="token punctuation">:</span> <span class="token number">5</span>

<span class="token key atrule">systemLog</span><span class="token punctuation">:</span>
  <span class="token comment"># 日志输出目的地，可以指定为 “file” 或者“syslog”，表述输出到日志文件，如果不指定，则会输出到标准输出中（standard output）</span>
  <span class="token key atrule">destination</span><span class="token punctuation">:</span> file
  <span class="token comment"># 如果为 true，当 mongod/mongos 重启后，将在现有日志的尾部继续添加日志。否则，将会备份当前日志文件，然后创建一个新的日志文件；默认为 false。</span>
  <span class="token key atrule">logAppend</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token comment"># 日志路径</span>
  <span class="token key atrule">path</span><span class="token punctuation">:</span> /var/log/mongodb/mongod.log

<span class="token key atrule">net</span><span class="token punctuation">:</span>
 <span class="token comment"># 指定端口</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">27017</span>
  <span class="token comment"># 绑定外网 op 多个用逗号分隔</span>
  <span class="token key atrule">bindIp</span><span class="token punctuation">:</span> 0.0.0.0
  <span class="token key atrule">maxIncomingConnections</span><span class="token punctuation">:</span> <span class="token number">10000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-用户管理" tabindex="-1"><a class="header-anchor" href="#_3-用户管理" aria-hidden="true">#</a> 3. 用户管理</h2><h3 id="_3-1-创建root账号" tabindex="-1"><a class="header-anchor" href="#_3-1-创建root账号" aria-hidden="true">#</a> 3.1. 创建root账号</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 切换数据库</span>
use admin
<span class="token comment"># 创建用户</span>
db.createUser<span class="token punctuation">(</span><span class="token punctuation">{</span>user:<span class="token string">&quot;root&quot;</span>,pwd:<span class="token string">&quot;root123&quot;</span>,roles:<span class="token punctuation">[</span><span class="token punctuation">{</span>role:<span class="token string">&quot;userAdminAnyDatabase&quot;</span>,db:<span class="token string">&quot;admin&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-调整配置文件" tabindex="-1"><a class="header-anchor" href="#_3-2-调整配置文件" aria-hidden="true">#</a> 3.2. 调整配置文件</h3><p>然后在配置文件中添加如下配置信息</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">security</span><span class="token punctuation">:</span>
  <span class="token key atrule">authorization</span><span class="token punctuation">:</span> enabled
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-重启mongodb服务" tabindex="-1"><a class="header-anchor" href="#_3-3-重启mongodb服务" aria-hidden="true">#</a> 3.3. 重启mongodb服务</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew services restart mongodb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_4-基础理论描述" tabindex="-1"><a class="header-anchor" href="#_4-基础理论描述" aria-hidden="true">#</a> 4. 基础理论描述</h2><blockquote><p><strong>ObjectId 值是 12 字节的十六进制值</strong>，包括：</p><ul><li>一个 4 字节的时间戳值，表示 ObjectId 的创建，以 Unix 纪元以来的秒数为单位。</li><li>一个 5 字节是一个随机值</li><li>一个 3 字节递增计数器，初始化为随机值。</li></ul></blockquote><h3 id="_4-1-数据类型" tabindex="-1"><a class="header-anchor" href="#_4-1-数据类型" aria-hidden="true">#</a> 4.1. 数据类型</h3><p>MongoDB支持以下数据类型:</p><ul><li><strong>String（字符串）</strong>: mongodb中的字符串是UTF-8有效的。</li><li><strong>Integer（整数）</strong>: 存储数值。整数可以是32位或64位，具体取决于您的服务器。</li><li><strong>Boolean（布尔）</strong>: 存储布尔(true/false)值。</li><li><strong>Double（双精度）</strong>: 存储浮点值。</li><li><strong>Min/ Max keys（最小/最大键）</strong>: 将值与最低和最高BSON元素进行比较。</li><li><strong>Arrays（数组）</strong>: 将数组或列表或多个值存储到一个键中。</li><li><strong>Timestamp（时间戳）</strong>: 存储时间戳。</li><li><strong>Object（对象）</strong>: 嵌入式文档。</li><li><strong>Null （空值）</strong>: 存储Null值。</li><li><strong>Symbol（符号）</strong>: 与字符串相同，用于具有特定符号类型的语言。</li><li><strong>Date（日期）</strong>: 以UNIX时间格式存储当前日期或时间。</li><li><strong>Object ID（对象ID）</strong> : 存储文档ID。</li><li><strong>Binary data（二进制数据）</strong>: 存储二进制数据。</li><li><strong>Code（代码）</strong>: 将JavaScript代码存储到文档中。</li><li><strong>Regular expression（正则表达式）</strong>: 存储正则表达式</li></ul><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档" aria-hidden="true">#</a> 参考文档</h2>`,20),v={href:"https://www.cnblogs.com/zhongguiyao/p/14148483.html",target:"_blank",rel:"noopener noreferrer"};function h(k,_){const a=t("ExternalLinkIcon");return i(),l("div",null,[c,n("blockquote",null,[n("p",null,[n("a",p,[s("MongoDB 官网"),e(a)]),s(" | "),n("a",u,[s("MongoDB 中文网址"),e(a)]),s(" | "),n("a",m,[s("直译官网MongoDB手册 4.2版本"),e(a)]),s(" | "),n("a",g,[s("MongoDB中文社区"),e(a)])])]),b,n("ul",null,[n("li",null,[n("a",v,[s("mongodb配置文件详解"),e(a)])])])])}const y=o(d,[["render",h],["__file","01.mongodb-introduce.html.vue"]]);export{y as default};
