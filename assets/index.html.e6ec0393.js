import{_ as n,r as d,o as t,c as i,a as e,b as a,d as o,e as s}from"./app.4659d0e0.js";const l={},c=s(`<h1 id="vuepress框架-文章打包发布到wordpress" tabindex="-1"><a class="header-anchor" href="#vuepress框架-文章打包发布到wordpress" aria-hidden="true">#</a> Vuepress框架 - 文章打包发布到WordPress</h1><h2 id="一、目的" tabindex="-1"><a class="header-anchor" href="#一、目的" aria-hidden="true">#</a> 一、目的</h2><p>​ 放弃使用Vuepress框架，后续使用WordPress进行文章记录，Vuepress原有的文章需要迁移到WordPress中。</p><h2 id="二、背景描述" tabindex="-1"><a class="header-anchor" href="#二、背景描述" aria-hidden="true">#</a> 二、背景描述</h2><p>​ vuepress主题：vdoing</p><p>​ python版本：3.7.10</p><h2 id="三、前期准备" tabindex="-1"><a class="header-anchor" href="#三、前期准备" aria-hidden="true">#</a> 三、前期准备</h2><h3 id="_3-1-下载git项目" tabindex="-1"><a class="header-anchor" href="#_3-1-下载git项目" aria-hidden="true">#</a> 3.1. 下载git项目</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone http://gitlab.pandacode.cn:8099/panda/python-markdown-to-wordpress.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-2-安装依赖项" tabindex="-1"><a class="header-anchor" href="#_3-2-安装依赖项" aria-hidden="true">#</a> 3.2. 安装依赖项</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip3 <span class="token function">install</span> python-frontmatter
pip3 <span class="token function">install</span> markdown
pip3 <span class="token function">install</span> python-wordpress-xmlrpc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、调整脚本配置内容-上传md文件" tabindex="-1"><a class="header-anchor" href="#四、调整脚本配置内容-上传md文件" aria-hidden="true">#</a> 四、调整脚本配置内容，上传md文件</h2><h3 id="_4-1-批量上传markdown文件到wordpress" tabindex="-1"><a class="header-anchor" href="#_4-1-批量上传markdown文件到wordpress" aria-hidden="true">#</a> 4.1. 批量上传Markdown文件到WordPress</h3><p>打开<code>upload-markdown-to-wordpress.py</code>，<strong>在主函数中修改</strong>以下四行：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>path = &#39;your directory path or file path which store your Markdown files&#39;  # e.g. D:/PythonCode/post-wordpress-with-markdown/doc
domain = &#39;https://xxx.com&#39;  # e.g. https://jwblog.xyz（配置了SSL证书就用https，否则用http）
username = &#39;your username&#39;
password = &#39;your password&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),p=e("li",null,[a("path：本地存放Markdown文件的"),e("strong",null,"目录路径"),a("或单个Markdown的"),e("strong",null,"文件路径")],-1),h={href:"https://jwblog.xyz/",target:"_blank",rel:"noopener noreferrer"},u=e("li",null,"username：你的WordPress账号",-1),m=e("li",null,"password：你的WordPress密码",-1),v=s(`<p>可选项：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>post_metadata = {
    &#39;category&#39;: [&#39;博客存档&#39;],  # 文章分类
    &#39;tag&#39;: [&#39;博客存档&#39;],  # 文章标签
    &#39;status&#39;: &#39;publish&#39;  # 可选publish发布、draft草稿、private隐私状态
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意，如果要上传的Markdown文件中含有YMAL Front Matter，则默认其优先级更高，会覆盖代码中的可选项。</p><p>你可以在Markdown文件的最开始处添加YMAL Front Matter：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>---
category: [博客存档]
tag: [博客存档]
status: publish
---
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>目前只支持category（文章分类）、tag（文章标签）、status（文章状态）。默认文章开启评论。</p><p>代码修改完毕后，最后运行<code>upload-markdown-to-wordpress.py</code>，即可实现批量上传。</p><h3 id="_4-2-通过本地markdown文件更新wordpress" tabindex="-1"><a class="header-anchor" href="#_4-2-通过本地markdown文件更新wordpress" aria-hidden="true">#</a> 4.2. 通过本地Markdown文件更新WordPress</h3><p>如果上传某个Markdown文件后，本地修改了其内容，这时使用<code>update-markdown-to-wordpress.py</code>即可更新内容。</p><p>用pycharm打开<code>update-markdown-to-wordpress.py</code>，<strong>在主函数中修改</strong>以下四行：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>filepath = &#39;your directory path or file path which store your Markdown files&#39;  # e.g. D:/PythonCode/post-wordpress-with-markdown/doc
domain = &#39;https://xxx.com&#39;  # e.g. https://jwblog.xyz（配置了SSL证书就用https，否则用http）
username = &#39;your username&#39;
password = &#39;your password&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>目前只支持更新已上传WordPress的单个文章的内容。</p><p><strong>注意：本地Markdown文件名和WordPress文章的标题需要保持一致。</strong></p><p>代码修改完毕后，最后运行<code>update-markdown-to-wordpress.py</code>，即可实现更新内容</p>`,14);function b(g,w){const r=d("ExternalLinkIcon");return t(),i("div",null,[c,e("ul",null,[p,e("li",null,[a("domain：你的域名，例如我的网站 "),e("a",h,[a("https://jwblog.xyz"),o(r)]),a(" （配置了SSL证书就用https，否则用http）")]),u,m]),v])}const _=n(l,[["render",b],["__file","index.html.vue"]]);export{_ as default};
