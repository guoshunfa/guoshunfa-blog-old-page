import{_ as n,o as s,c as a,e}from"./app.4659d0e0.js";const t={},o=e(`<h1 id="统一时间响应格式" tabindex="-1"><a class="header-anchor" href="#统一时间响应格式" aria-hidden="true">#</a> 统一时间响应格式</h1><p>在日常的接口开发中，不免会遇到时间类型的数据。时间类型如果什么都不处理就响应给前端的话，不太友好。</p><p>这里后端做一些配置，就可以让响应的时间根据制定格式进行转换，将转换后的时间响应给前端。</p><h2 id="配置前后的区别" tabindex="-1"><a class="header-anchor" href="#配置前后的区别" aria-hidden="true">#</a> 配置前后的区别</h2><p><strong>没添加配置前：</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;请求成功&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2022-10-13T05:22:01.961+00:00&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>添加配置后：</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;请求成功&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2022-10-13 13:13:23&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="添加配置信息" tabindex="-1"><a class="header-anchor" href="#添加配置信息" aria-hidden="true">#</a> 添加配置信息</h2><p>添加配置信息到springboot配置文件application.properties。</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># json入参及返回值Date时间格式</span>
<span class="token key attr-name">spring.jackson.date-format</span><span class="token punctuation">=</span><span class="token value attr-value">yyyy-MM-dd HH:mm:ss</span>
<span class="token comment"># 时区</span>
<span class="token key attr-name">spring.jackson.time-zone</span><span class="token punctuation">=</span><span class="token value attr-value">GMT+8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),p=[o];function i(r,c){return s(),a("div",null,p)}const d=n(t,[["render",i],["__file","04.unify-date-format.html.vue"]]);export{d as default};
