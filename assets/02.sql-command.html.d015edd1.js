import{_ as l,r as d,o as r,c as o,a as t,b as n,d as s,e as a}from"./app.4659d0e0.js";const i={},c=t("h1",{id:"sql-命令记录",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#sql-命令记录","aria-hidden":"true"},"#"),n(" SQL - 命令记录")],-1),u={href:"https://www.runoob.com/sql/sql-tutorial.html",target:"_blank",rel:"noopener noreferrer"},m=t("p",null,"命令行连接数据库方式：",-1),p=t("p",null,[n("​ 打开终端输入"),t("code",null,"mysql -uroot -p"),n("，随后输入密码。")],-1),h=t("p",null,"​ root可替换成其他用户名。",-1),g=a(`<h2 id="_1-sql-主要命令描述" tabindex="-1"><a class="header-anchor" href="#_1-sql-主要命令描述" aria-hidden="true">#</a> 1. sql 主要命令描述</h2><blockquote><p>所有 MySQL 命令的列表：注意，所有文本命令必须在一行的开头，并且以分号“;”结束</p><table><thead><tr><th>命令</th><th>缩写</th><th>命令说明</th><th>示例</th></tr></thead><tbody><tr><td>?</td><td>?</td><td>“help”的同义词。</td><td>mysql&gt; ?</td></tr><tr><td>clear</td><td>c</td><td>清除当前输入的语句。一般用于多行命令。</td><td>mysql&gt; c</td></tr><tr><td>connect</td><td>r</td><td>重新连接到服务器。可选参数是 db 和 host。连接 ID 将会改变。</td><td>mysql&gt; r</td></tr><tr><td>mysql&gt; r [数据库] [主机]</td><td></td><td></td><td></td></tr><tr><td>delimiter</td><td>d</td><td>设置语句定界符。默认为“;”。</td><td>mysql&gt; d 定界符</td></tr><tr><td>ego</td><td>G</td><td>发送命令到 MySQL 服务器，垂直显示结果。</td><td>mysql&gt; SHOW DATABASESG</td></tr><tr><td>exit</td><td>q</td><td>退出 MySQL。与 quit 相同。</td><td>mysql&gt; exit</td></tr><tr><td>go</td><td>g</td><td>发送命令到 MySQL 服务器。</td><td>mysql&gt; SELECT \`id\` FROM \`table\`g</td></tr><tr><td>help</td><td>h</td><td>显示该帮助信息。</td><td>mysql&gt; h</td></tr><tr><td>notee</td><td>t</td><td>不要写到 outfile 中。</td><td>mysql&gt; notee</td></tr><tr><td>print</td><td>p</td><td>打印当前命令。</td><td>mysql&gt; SHOW TABLESp;</td></tr><tr><td>prompt</td><td>R</td><td>改变你的 MySQL 提示符。</td><td>mysql&gt; prompt --&gt;</td></tr><tr><td>quit</td><td>q</td><td>退出 MySQL。</td><td>mysql&gt; q</td></tr><tr><td>rehash</td><td>#</td><td>重建完整的 hash（用于自动完成名称）。</td><td>mysql&gt; #</td></tr><tr><td>source</td><td>.</td><td>执行一个 SQL 脚本文件。使用一个文件名作为参数。</td><td>mysql&gt; source D:my.sql</td></tr><tr><td>status</td><td>s</td><td>从服务器取得状态信息。</td><td>mysql&gt; status</td></tr><tr><td>tee</td><td>T</td><td>设置 outfile 为 [to_outfile]。向已给出的 outfile 文件中追加所有东西。</td><td>mysql&gt; tee E:store.txt</td></tr><tr><td>use</td><td>u</td><td>使用另一个数据库。使用一个数据库名作为参数。</td><td>mysql&gt; use 数据库</td></tr><tr><td>charset</td><td>C</td><td>切换到其它字符集。可能需要使用多字节字符集来处理二进制日志。</td><td>mysql&gt; charset 字符集</td></tr><tr><td>warnings</td><td>W</td><td>在每一个语句后面显示警告。</td><td>mysql&gt; W</td></tr><tr><td>nowarning</td><td>w</td><td>不在每一个语句后面显示警告。</td><td>mysql&gt; w</td></tr><tr><td>要获得服务器端的帮助信息，键入“help contents”</td><td></td><td></td><td></td></tr></tbody></table></blockquote><h3 id="_1-1-数据库操作" tabindex="-1"><a class="header-anchor" href="#_1-1-数据库操作" aria-hidden="true">#</a> 1.1. 数据库操作</h3><p>创建数据库：<code>CREATE DATABASE database_name;</code></p><p>删除数据库：<code>DROP DATABASE database_name</code></p><h3 id="_1-2-数据库表操作" tabindex="-1"><a class="header-anchor" href="#_1-2-数据库表操作" aria-hidden="true">#</a> 1.2. 数据库表操作</h3><blockquote><p>CREATE TABLE 语句用于创建数据库中的表。</p><p>表由行和列组成，每个表都必须有个表名。</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> table_name
<span class="token punctuation">(</span>
column_name1 data_type<span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">,</span>
column_name2 data_type<span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">,</span>
column_name3 data_type<span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>column_name 参数规定表中列的名称。</p><p>data_type 参数规定列的数据类型（例如 varchar、integer、decimal、date 等等）。</p><p>size 参数规定表中列的最大长度。</p>`,11),E={href:"https://www.runoob.com/sql/sql-datatypes.html",target:"_blank",rel:"noopener noreferrer"},_={id:"_1-2-1-sql约束-constraints",tabindex:"-1"},b=t("a",{class:"header-anchor",href:"#_1-2-1-sql约束-constraints","aria-hidden":"true"},"#",-1),v={href:"https://www.runoob.com/sql/sql-constraints.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.runoob.com/sql/sql-constraints.html",target:"_blank",rel:"noopener noreferrer"},T=a(`<p>SQL 约束用于规定表中的数据规则。</p><p>如果存在违反约束的数据行为，行为会被约束终止。</p><p>约束可以在<strong>创建表</strong>时规定（通过 CREATE TABLE 语句），或者在<strong>表创建之后</strong>规定（通过 ALTER TABLE 语句）。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> table_name
<span class="token punctuation">(</span>
column_name1 data_type<span class="token punctuation">(</span>size<span class="token punctuation">)</span> constraint_name<span class="token punctuation">,</span>
column_name2 data_type<span class="token punctuation">(</span>size<span class="token punctuation">)</span> constraint_name<span class="token punctuation">,</span>
column_name3 data_type<span class="token punctuation">(</span>size<span class="token punctuation">)</span> constraint_name<span class="token punctuation">,</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 SQL 中，我们有如下约束：</p><ul><li><strong>NOT NULL</strong> - 指示某列不能存储 NULL 值。</li><li><strong>UNIQUE</strong> - 保证某列的每行必须有唯一的值。</li><li><strong>PRIMARY KEY</strong> - 主键，NOT NULL 和 UNIQUE 的结合。确保某列（或两个列多个列的结合）有唯一标识，有助于更容易更快速地找到表中的一个特定的记录。</li><li><strong>FOREIGN KEY</strong> - 外键，保证一个表中的数据匹配另一个表中的值的参照完整性。</li><li><strong>CHECK</strong> - 保证列中的值符合指定的条件。</li><li><strong>DEFAULT</strong> - 规定没有给列赋值时的默认值。</li></ul><h4 id="_1-2-2-索引" tabindex="-1"><a class="header-anchor" href="#_1-2-2-索引" aria-hidden="true">#</a> 1.2.2. 索引</h4><p>您可以在表中创建索引，以便更加快速高效地查询数据。</p><p>用户无法看到索引，它们只能被用来加速搜索/查询。</p><p>**注释：**更新一个包含索引的表需要比更新一个没有索引的表花费更多的时间，这是由于索引本身也需要更新。因此，理想的做法是仅仅在常常被搜索的列（以及表）上面创建索引。</p><p><strong>SQL CREATE INDEX 语法</strong></p><p>在表上创建一个简单的索引。允许使用重复的值：</p><p>CREATE INDEX index_name ON table_name (column_name)</p><p><strong>SQL CREATE UNIQUE INDEX 语法</strong></p><p>在表上创建一个唯一的索引。不允许使用重复的值：唯一的索引意味着两个行不能拥有相同的索引值。Creates a unique index on a table. Duplicate values are not allowed:</p><p>CREATE UNIQUE INDEX index_name ON table_name (column_name)</p><p>**注释：**用于创建索引的语法在不同的数据库中不一样。因此，检查您的数据库中创建索引的语法。</p><h2 id="_2-crud" tabindex="-1"><a class="header-anchor" href="#_2-crud" aria-hidden="true">#</a> 2. crud</h2><h3 id="_2-1-查询" tabindex="-1"><a class="header-anchor" href="#_2-1-查询" aria-hidden="true">#</a> 2.1. 查询</h3>`,19),L=t("thead",null,[t("tr",null,[t("th",null,"命令"),t("th",null,"命令说明"),t("th",null,"命令示例")])],-1),S=t("tr",null,[t("td",null,[t("strong",null,"SELECT")]),t("td",null,"查询语句头。"),t("td",null,[t("strong",null,"SELECT"),n(" column_name "),t("br"),t("strong",null,"FROM"),n(" table_name;")])],-1),q=t("tr",null,[t("td",null,[t("a",{href:"#_2-1-1-select-distinct%E8%AF%AD%E6%B3%95"},[t("strong",null,"SELECT DISTINCT")])]),t("td",null,"查询DISTINCT 关键词用于返回唯一不同的值。"),t("td",null,[t("strong",null,"SELECT"),n(),t("strong",null,"DISTINCT"),n(" column_name,column_name "),t("br"),t("strong",null,"FROM"),n(" table_name;")])],-1),N=t("tr",null,[t("td",null,[t("a",{href:"#_2-1-2-where-%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2%E7%9B%B8%E5%85%B3%E8%AF%AD%E6%B3%95"},[t("strong",null,"WHERE")])]),t("td",null,"条件查询。下面会梳理出和WHERE搭配使用的语法。"),t("td",null,[t("strong",null,"SELECT"),n(" column_name,column_name "),t("br"),t("strong",null,"FROM"),n(" table_name "),t("br"),t("strong",null,"WHERE"),n(" column_name operator value;")])],-1),y=t("tr",null,[t("td",null,[t("strong",null,"ORDER BY")]),t("td",null,"排序。指定列进行排序(ASC)，默认为升序。添加DESC可调整成倒序。"),t("td",null,[t("strong",null,"SELECT"),n(" column_name,column_name "),t("br"),t("strong",null,"FROM"),n(" table_name "),t("br"),t("strong",null,"ORDER BY"),n(" column_name,"),t("em",null,"column_name"),n(),t("strong",null,"ASC|DESC"),n(";")])],-1),R=t("tr",null,[t("td",null,[t("strong",null,"LIMIT")]),t("td",null,"返回指定数目的数据。常用于分页查询。"),t("td",null,[t("strong",null,"SELECT"),n(" column_name"),t("br"),t("strong",null,"FROM"),n(),t("em",null,"table_name"),t("br"),t("strong",null,"LIMIT"),n(),t("em",null,"number"),n(";")])],-1),I=t("tr",null,[t("td",null,[n("["),t("strong",null,"JOIN"),n("](#_2-1-4- SQL-JOIN)")]),t("td",null,"多表连查，SQL join 用于把来自两个或多个表的行结合起来。"),t("td",null,[t("strong",null,"SELECT"),n(" Websites.id, Websites.name, access_log.count, access_log.date"),t("br"),t("strong",null,"FROM"),n(" Websites"),t("br"),t("strong",null,"INNER JOIN"),n(" access_log"),t("br"),t("strong",null,"ON"),n(" Websites.id=access_log.site_id;")])],-1),O=t("tr",null,[t("td",null,[t("strong",null,"UNION"),n(" | "),t("strong",null,"UNION ALL")]),t("td",null,[n("SQL UNION 操作符合并两个或多个 SELECT 语句的结果。"),t("strong",null,"UNION 操作符选取不同的值。如果允许重复的值，请使用 UNION ALL。"),t("br"),n("支持使用WHERE、JOIN等操作符。")]),t("td",null,[t("strong",null,"SELECT"),n(),t("em",null,"column_name(s)"),n(" FROM "),t("em",null,"table1"),t("br"),t("strong",null,"UNION"),t("br"),t("strong",null,"SELECT"),n(),t("em",null,"column_name(s)"),n(" FROM "),t("em",null,"table2"),n(";")])],-1),C={href:"https://www.runoob.com/sql/sql-select-into.html",target:"_blank",rel:"noopener noreferrer"},w=t("strong",null,"SELECT INTO",-1),A=t("td",null,[n("通过 SQL，您可以从一个表复制信息到另一个表。SELECT INTO 语句从一个表复制数据，然后把数据插入到另一个新表中。"),t("br"),n("支持使用WHERE、JOIN等操作符。"),t("br"),n("MYSQL不支持，但支持INSERT INTO.... SELECT。")],-1),f=t("td",null,[t("strong",null,"SELECT"),n(),t("em",null,"column_name(s)"),t("br"),t("strong",null,"INTO"),n(),t("em",null,"newtable"),n(" [IN "),t("em",null,"externaldb"),n("]"),t("br"),t("strong",null,"FROM"),n(),t("em",null,"table1;")],-1),x={href:"https://www.runoob.com/sql/sql-insert-into-select.html",target:"_blank",rel:"noopener noreferrer"},W=t("strong",null,"INSERT INTO SELECT",-1),M=t("td",null,"通过 SQL，您可以从一个表复制信息到另一个表。INSERT INTO SELECT 语句从一个表复制数据，然后把数据插入到一个已存在的表中。目标表中任何已存在的行都不会受影响。",-1),D=t("td",null,[t("strong",null,"INSERT"),n(),t("strong",null,"INTO"),n(" table2"),t("br"),n("(column_name(s))"),t("br"),t("strong",null,"SELECT"),n(" column_name(s)"),t("br"),t("strong",null,"FROM"),n(" table1;")],-1),F=t("tr",null,[t("td"),t("td"),t("td")],-1),Q=t("tr",null,[t("td"),t("td"),t("td")],-1),H=t("tr",null,[t("td"),t("td"),t("td")],-1),U=t("tr",null,[t("td"),t("td"),t("td")],-1),B=t("tr",null,[t("td"),t("td"),t("td")],-1),K=t("tr",null,[t("td"),t("td"),t("td")],-1),P=t("tr",null,[t("td"),t("td"),t("td")],-1),G=t("tr",null,[t("td"),t("td"),t("td")],-1),J=t("tr",null,[t("td"),t("td"),t("td")],-1),X=a(`<h4 id="_2-1-1-select-distinct语法" tabindex="-1"><a class="header-anchor" href="#_2-1-1-select-distinct语法" aria-hidden="true">#</a> 2.1.1. SELECT DISTINCT语法</h4><p>下面是选自 &quot;Websites&quot; 表的数据：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>+----+--------------+---------------------------+-------+---------+
| id | name         | url                       | alexa | country |
+----+--------------+---------------------------+-------+---------+
| 1  | Google       | https://www.google.cm/    | 1     | USA     |
| 2  | 淘宝          | https://www.taobao.com/   | 13    | CN      |
| 3  | 菜鸟教程      | http://www.runoob.com/    | 4689  | CN      |
| 4  | 微博          | http://weibo.com/         | 20    | CN      |
| 5  | Facebook     | https://www.facebook.com/ | 3     | USA     |
+----+--------------+---------------------------+-------+---------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输入：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> country <span class="token keyword">FROM</span> Websites<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输出：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>+---------+
| country |
+---------+
| USA     |
| CN      |
+---------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-1-2-where-条件查询相关语法" tabindex="-1"><a class="header-anchor" href="#_2-1-2-where-条件查询相关语法" aria-hidden="true">#</a> 2.1.2. WHERE 条件查询相关语法</h4><table><thead><tr><th>操作符</th><th>操作符描述</th><th>示例</th></tr></thead><tbody><tr><td><strong>AND</strong></td><td>查询出两个条件都满足的记录。</td><td><strong>SELECT</strong> column_name,column_name <br><strong>FROM</strong> table_name <br><strong>WHERE</strong> column_name operator value <br><strong>and</strong> column_name operator value;</td></tr><tr><td><strong>OR</strong></td><td>查询出两个条件有一个满足就可以的记录</td><td><strong>SELECT</strong> column_name,column_name <br><strong>FROM</strong> table_name <br><strong>WHERE</strong> column_name operator value <br><strong>or</strong> column_name operator value;</td></tr><tr><td><strong>LIKE</strong> | <strong>NOT LIKE</strong></td><td>模糊查询。<br><strong>LIKE</strong>:取匹配的数据;<br><strong>NOT LIKE</strong>:取不匹配的数据;<br>通过<a href="#_2-1-3-%E9%80%9A%E9%85%8D%E7%AC%A6">通配符</a><code>-</code>、<code>%</code>操控模糊查询部分。</td><td><strong>SELECT</strong> <em>column_name(s)</em><br><strong>FROM</strong> <em>table_name</em><br><strong>WHERE</strong> <em>column_name</em> <br><strong>LIKE | NOT LIKE</strong> <em>pattern</em>;</td></tr><tr><td><strong>REGEXP</strong> | <strong>NOT REGEXP</strong></td><td>正则查询。<br><strong>REGEXP</strong>:取匹配的数据;<br><strong>NOT REGEXP</strong>:取不匹配的数据;<br>通过<a href="#_2-1-3-%E9%80%9A%E9%85%8D%E7%AC%A6">通配符</a><code>[charlist]</code>操控模糊查询部分。</td><td><strong>SELECT</strong> <em>column_name(s)</em><br><strong>FROM</strong> <em>table_name</em><br><strong>WHERE</strong> <em>column_name</em> <br><strong>REGEXP</strong> | <strong>NOT REGEXP</strong> pattern;</td></tr><tr><td><strong>IN</strong></td><td>IN 操作符允许您在 WHERE 子句中规定多个值。</td><td><strong>SELECT</strong> <em>column_name(s)</em><br><strong>FROM</strong> <em>table_name</em><br><strong>WHERE</strong> <em>column_name</em> <strong>IN</strong> (<em>value1</em>,<em>value2</em>,...);</td></tr><tr><td><strong>BETWEEN</strong></td><td>BETWEEN 操作符用于选取介于<strong>两个值之间的数据范围内的值</strong>。这些值可以是数值、文本或者日期。</td><td><strong>SELECT</strong> <em>column_name(s)</em><br><strong>FROM</strong> <em>table_name</em><br><strong>WHERE</strong> <em>column_name</em> <br><strong>BETWEEN</strong> <em>value1</em> <strong>AND</strong> <em>value2;</em></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h4 id="_2-1-3-通配符" tabindex="-1"><a class="header-anchor" href="#_2-1-3-通配符" aria-hidden="true">#</a> 2.1.3. 通配符</h4><table><thead><tr><th style="text-align:left;">通配符</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">%</td><td style="text-align:left;">替代 0 个或多个字符</td></tr><tr><td style="text-align:left;">_</td><td style="text-align:left;">替代一个字符</td></tr><tr><td style="text-align:left;">[<em>charlist</em>]</td><td style="text-align:left;">字符列中的任何单一字符</td></tr><tr><td style="text-align:left;">[^<em>charlist</em>] 或 [!<em>charlist</em>]</td><td style="text-align:left;">不在字符列中的任何单一字符</td></tr></tbody></table><p>案例一：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 查询url开头为https的数据。</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> Websites
<span class="token keyword">WHERE</span> url <span class="token operator">LIKE</span> <span class="token string">&#39;https%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>案例二：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 查询url中包含oo的数据。</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> Websites
<span class="token keyword">WHERE</span> url <span class="token operator">LIKE</span> <span class="token string">&#39;%oo%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>案例三：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 选取 name 以一个任意字符开始，然后是 &quot;oogle&quot; 的所有客户</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> Websites
<span class="token keyword">WHERE</span> name <span class="token operator">LIKE</span> <span class="token string">&#39;_oogle&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-1-4-sql-join" tabindex="-1"><a class="header-anchor" href="#_2-1-4-sql-join" aria-hidden="true">#</a> 2.1.4. SQL JOIN</h4><img src="https://file.pandacode.cn/blog/202207261033383.png" alt="img" style="zoom:67%;"><ul><li><strong>INNER JOIN</strong>：如果表中有至少一个匹配，则返回行</li><li><strong>LEFT JOIN</strong>：即使右表中没有匹配，也从左表返回所有的行</li><li><strong>RIGHT JOIN</strong>：即使左表中没有匹配，也从右表返回所有的行</li><li><strong>FULL JOIN</strong>：只要其中一个表中存在匹配，则返回行</li></ul><h3 id="_2-2-新增" tabindex="-1"><a class="header-anchor" href="#_2-2-新增" aria-hidden="true">#</a> 2.2. 新增</h3><table><thead><tr><th>命令</th><th>命令描述</th><th>示例</th></tr></thead><tbody><tr><td>INSERT INTO</td><td>新增数据</td><td><strong>INSERT INTO</strong> <em>table_name</em> (<em>column1</em>,<em>column2</em>,<em>column3</em>,...)<br><strong>VALUES</strong> (<em>value1</em>,<em>value2</em>,<em>value3</em>,...);</td></tr></tbody></table><h3 id="_2-3-修改" tabindex="-1"><a class="header-anchor" href="#_2-3-修改" aria-hidden="true">#</a> 2.3. 修改</h3><blockquote><p><strong>请注意 SQL UPDATE 语句中的 WHERE 子句！</strong> WHERE 子句规定哪条记录或者哪些记录需要更新。如果您省略了 WHERE 子句，所有的记录都将被更新！</p></blockquote><table><thead><tr><th>命令</th><th>命令描述</th><th>示例</th></tr></thead><tbody><tr><td>UPDATE</td><td>修改数据</td><td><strong>UPDATE</strong> <em>table_name</em><br><strong>SET</strong> <em>column1</em>=<em>value1</em>,<em>column2</em>=<em>value2</em>,...<br><strong>WHERE</strong> <em>some_column</em>=<em>some_value</em>;</td></tr></tbody></table><h3 id="_2-4-删除" tabindex="-1"><a class="header-anchor" href="#_2-4-删除" aria-hidden="true">#</a> 2.4. 删除</h3><blockquote><p><strong>请注意 SQL DELETE 语句中的 WHERE 子句！</strong> WHERE 子句规定哪条记录或者哪些记录需要删除。如果您省略了 WHERE 子句，所有的记录都将被删除！</p></blockquote><table><thead><tr><th>命令</th><th>命令描述</th><th>示例</th></tr></thead><tbody><tr><td>DELETE</td><td>删除数据</td><td>DELETE FROM <em>table_name</em><br>WHERE <em>some_column</em>=<em>some_value</em>;</td></tr></tbody></table><h3 id="_2-5-通用操作符" tabindex="-1"><a class="header-anchor" href="#_2-5-通用操作符" aria-hidden="true">#</a> 2.5. 通用操作符</h3><table><thead><tr><th>操作符</th><th>操作符描述</th><th>示例</th></tr></thead><tbody><tr><td><strong>AS</strong></td><td><strong>SQL 别名</strong>。</td><td><strong>SELECT</strong> t.column_name AS alias_name <br><strong>FROM</strong> table_name AS t;</td></tr></tbody></table><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,31),z={href:"https://www.runoob.com/sql/sql-tutorial.html",target:"_blank",rel:"noopener noreferrer"};function Y(V,j){const e=d("ExternalLinkIcon");return r(),o("div",null,[c,t("blockquote",null,[t("p",null,[n("前往"),t("a",u,[n("菜鸟教程"),s(e)]),n("。")]),m,p,h]),g,t("p",null,[n("**提示：**如需了解 MS Access、MySQL 和 SQL Server 中可用的数据类型，请访问我们完整的 "),t("a",E,[n("数据类型参考手册"),s(e)]),n("。")]),t("h4",_,[b,n(" 1.2.1. "),t("a",v,[n("SQL约束（Constraints）"),s(e)])]),t("blockquote",null,[t("p",null,[n("不同数据库的约束不同，详细查看"),t("a",k,[n("菜鸟教程"),s(e)]),n("的API描述。")])]),T,t("table",null,[L,t("tbody",null,[S,q,N,y,R,I,O,t("tr",null,[t("td",null,[t("a",C,[w,s(e)])]),A,f]),t("tr",null,[t("td",null,[t("a",x,[W,s(e)])]),M,D]),F,Q,H,U,B,K,P,G,J])]),X,t("ul",null,[t("li",null,[t("a",z,[n("菜鸟教程"),s(e)])])])])}const $=l(i,[["render",Y],["__file","02.sql-command.html.vue"]]);export{$ as default};
