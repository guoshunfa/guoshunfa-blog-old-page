import{_ as d,r as o,o as r,c as p,a as e,b as s,d as i,w as t,e as a}from"./app.4659d0e0.js";const l={},c=a('<h1 id="shell-ssh-远程连接工具" tabindex="-1"><a class="header-anchor" href="#shell-ssh-远程连接工具" aria-hidden="true">#</a> Shell - ssh 远程连接工具</h1><h2 id="_1-命令" tabindex="-1"><a class="header-anchor" href="#_1-命令" aria-hidden="true">#</a> 1. 命令</h2><ul><li><code>ssh 用户名@主机IP</code></li><li><code>ssh 主机IP</code></li><li><code>ssh -i pem文件路径 用户名@主机IP</code></li><li><code>ssh -p 端口 用户名@主机IP</code></li></ul><h2 id="_2-ssh-携带密码登录-sshpass" tabindex="-1"><a class="header-anchor" href="#_2-ssh-携带密码登录-sshpass" aria-hidden="true">#</a> 2. ssh 携带密码登录-sshpass</h2>',4),n=a('<p><code>sshpass -p [passwd] ssh -p [port] root@192.168.X.X</code></p><h2 id="_3-ssh通过pem文件登陆服务器" tabindex="-1"><a class="header-anchor" href="#_3-ssh通过pem文件登陆服务器" aria-hidden="true">#</a> 3. ssh通过pem文件登陆服务器</h2><p>一些为了安全操作，推荐使用私钥进行登录服务器，拿jenkins来说，默认的验证方式就是私钥</p><h3 id="_3-1-实现方式" tabindex="-1"><a class="header-anchor" href="#_3-1-实现方式" aria-hidden="true">#</a> 3.1. 实现方式</h3><p>先在<strong>本机</strong>通过ssh-keygen直接生成公私钥</p><p>如下在当前文件夹下生成my.pem(私钥)和my.pem.pub(公钥)</p><p><code>ssh-keygen -t rsa -f my.pem</code></p><p>参数说明：-t type密钥类型（rsa、dsa...），-f生成文件名</p><h3 id="_3-2-生成的文件" tabindex="-1"><a class="header-anchor" href="#_3-2-生成的文件" aria-hidden="true">#</a> 3.2. 生成的文件</h3><p>my.pem 和 my.pem.pub</p><ol><li><p>将my.pem.pub内容上传至你需要连接的服务器</p></li><li><p>操作步骤，编辑authorized_keys文件，路径在当前用户目录下的.ssh文件夹下</p></li><li><p>将生成的pub文件的内容追加到authorized_keys文件中</p></li></ol><p>保存退出之后就可以通过<code>ssh -i file.pem user@ip</code>访问了</p>',12);function _(u,m){const h=o("RouterLink");return r(),p("div",null,[c,e("blockquote",null,[e("p",null,[s("详细内容可直接查看"),i(h,{to:"/pages/bd9696/"},{default:t(()=>[s("sshpass使用说明")]),_:1})])]),n])}const b=d(l,[["render",_],["__file","12.shell-ssh.html.vue"]]);export{b as default};
