import{_ as a,o as n,c as s,e}from"./app.4659d0e0.js";const o={},t=e(`<h1 id="操作系统-神器宝塔" tabindex="-1"><a class="header-anchor" href="#操作系统-神器宝塔" aria-hidden="true">#</a> 操作系统 - 神器宝塔</h1><p>转载自：https://juejin.cn/post/6950558227490668557</p><h2 id="宝塔面板是什么" tabindex="-1"><a class="header-anchor" href="#宝塔面板是什么" aria-hidden="true">#</a> 宝塔面板是什么？</h2><p>宝塔 Linux 面板是提升运维效率的服务器管理软件，支持一键 LAMP/LNMP/集群/监控/网站/FTP/数据库/JAVA 等 100 多项服务器管理功能。有 30 个人的专业团队研发及维护，经过 200 多个版本的迭代，功能全，少出错且足够安全，已获得全球百万用户认可安装。运维要高效，装宝塔。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6b9e0acdaa93469c95368e6cefe200e8~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.image" alt="img"></p><h2 id="为什么使用-docker-安装" tabindex="-1"><a class="header-anchor" href="#为什么使用-docker-安装" aria-hidden="true">#</a> 为什么使用 Docker 安装？</h2><ol><li>环境隔离，一个主机可以部署多套服务</li><li>宝塔对主机控制度较高，依赖关系复杂，而 Docker 可以保证宝塔服务不影响到宿主机其他服务。</li><li>由于和宿主机环境隔离，不容易被木马工具。</li><li>宝塔面板的兼容性顺序为 <code>Centos7.x &gt; Debian10 &gt; Ubuntu 20.04 &gt; Cenots8.x &gt; Ubuntu 18.04 &gt; 其它系统</code>，而用户的主机五花八门，为了获取最佳的兼容性，使用 Docker 部署是不二选择。</li><li>Docker 管理成本低，方便迁移。</li><li>可随时管理容器，无需重置服务器。</li></ol><h2 id="docker-安装" tabindex="-1"><a class="header-anchor" href="#docker-安装" aria-hidden="true">#</a> Docker 安装</h2><p>推荐使用脚本安装：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://get.docker.com <span class="token parameter variable">-o</span> get-docker.sh

<span class="token function">sudo</span> <span class="token function">sh</span> get-docker.sh <span class="token parameter variable">--mirror</span> Aliyun
复制代码
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装成功后，会自动启动 Docker 服务。用户可以使用 <code>systemctl is-enabled docker</code> 来确认 Docker 服务是否是开机自启动。如果不是请使用 <code>systemctl enable docker</code> 设置自启动。</p><p><strong>代理加速</strong></p><p>执行 <code>nano /etc/docker/daemon.json</code> 中写入如下内容：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;registry-mirrors&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;https://registry.docker-cn.com&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;https://mirror.baidubce.com&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;https://hub-mirror.c.163.com&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
复制代码
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="开端口教程-不开不能用" tabindex="-1"><a class="header-anchor" href="#开端口教程-不开不能用" aria-hidden="true">#</a> 开端口教程，不开不能用</h2><blockquote><p>宝塔需要的端口：8888、888、20、21、80、443</p></blockquote><h2 id="安装宝塔镜像" tabindex="-1"><a class="header-anchor" href="#安装宝塔镜像" aria-hidden="true">#</a> 安装宝塔镜像</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://youngjuning.js.org/shell/baota/install.sh <span class="token operator">|</span> <span class="token function">sh</span>
复制代码
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>/www/wwwroot</code> 挂载在宿主机的 <code>~/wwwroot</code> 目录</li><li><code>/www</code> 挂载在 <code>baota_www</code> volume，即 <code>/var/lib/docker/volumes/baota_www/</code></li></ul><blockquote><p>上面的脚本是为了我为了方便管理，等价于 <code>docker run -tid --name baota --net=host --privileged=true --shm-size=1g --restart always -v baota_www:/www -v ~/wwwroot:/www/wwwroot pch18/baota</code></p></blockquote><h3 id="登录方式" tabindex="-1"><a class="header-anchor" href="#登录方式" aria-hidden="true">#</a> 登录方式</h3><ul><li>登陆地址：<code>http://{{面板ip地址}}:8888</code></li><li>初始账号：<code>username</code></li><li>初始密码：<code>password</code></li></ul><h3 id="宝塔面板命令行" tabindex="-1"><a class="header-anchor" href="#宝塔面板命令行" aria-hidden="true">#</a> 宝塔面板命令行</h3><p><strong>进入容器：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> baota <span class="token function">bash</span>
复制代码
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>执行 <code>bt</code> 进行交互式操作：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bebc0d8e35b1 wwwroot<span class="token punctuation">]</span><span class="token comment"># bt</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>宝塔面板命令行<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> 重启面板服务           <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> 改面板端口
<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> 停止面板服务           <span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span> 清除面板缓存
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> 启动面板服务           <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> 清除登录限制
<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> 重载面板服务           <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> 取消入口限制
<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> 修改面板密码           <span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span> 取消域名绑定限制
<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> 修改面板用户名         <span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span> 取消IP访问限制
<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> 强制修改MySQL密码      <span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span> 查看面板默认信息
<span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span> 显示面板错误日志      <span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span> 清理系统垃圾
<span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">)</span> 关闭BasicAuth认证     <span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> 修复面板<span class="token punctuation">(</span>检查错误并更新面板文件到最新版<span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span> 关闭谷歌认证          <span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">)</span> 设置日志切割是否压缩
<span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span> 设置是否保存文件历史副本  <span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span> 设置是否自动备份面板
<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> 取消
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
复制代码
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="进阶配置" tabindex="-1"><a class="header-anchor" href="#进阶配置" aria-hidden="true">#</a> 进阶配置</h2><ol><li>登录面板后，请立即修改面板用户和面板密码，并建议修改面板端口和安全入口。</li><li>更新的话，可以使用面板提供的更新功能。</li></ol><h2 id="备份宝塔面板容器" tabindex="-1"><a class="header-anchor" href="#备份宝塔面板容器" aria-hidden="true">#</a> 备份宝塔面板容器</h2><p>如果我们迁移的话，不需要再重复上面的安装配置步骤，直接使用我提供的脚本：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://youngjuning.js.org/shell/baota/backup.sh <span class="token operator">|</span> <span class="token function">sh</span>
复制代码
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>压缩包 <code>baota.tar</code> 将备份到当前目录，上传到新的服务器之后载入容器：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> load <span class="token parameter variable">-i</span> baota.tar
复制代码
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>恢复容器：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://youngjuning.js.org/shell/baota/restore.sh <span class="token operator">|</span> <span class="token function">sh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,36),p=[t];function c(l,i){return n(),s("div",null,p)}const u=a(o,[["render",c],["__file","80.baota.html.vue"]]);export{u as default};
