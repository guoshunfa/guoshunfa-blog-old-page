import{_ as n,o as s,c as a,e as t}from"./app.4659d0e0.js";const p={},o=t(`<h1 id="js-js-post方式打开新窗口" tabindex="-1"><a class="header-anchor" href="#js-js-post方式打开新窗口" aria-hidden="true">#</a> JS - JS post方式打开新窗口</h1><blockquote><p>原理：</p><ol><li>前端在打开浏览器窗口的同时，放入一段html代码。</li><li>html代码包含表单，也就相当于模拟表单post方式提交。</li><li>后端接口也通过表单的方式接受参数。</li></ol></blockquote><h2 id="_1-html" tabindex="-1"><a class="header-anchor" href="#_1-html" aria-hidden="true">#</a> 1. html</h2><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn_amp<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>点点点<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.bootcss.com/jquery/1.12.4/jquery.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#btn_amp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token string">&quot;http://localhost:8080/test3&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">var</span> keys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;userName&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">var</span> values <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token function">openWindowWithPost</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token string">&quot;预览&quot;</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> keys<span class="token punctuation">,</span> values<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 调用
     */</span>
    <span class="token keyword">function</span> <span class="token function">openWindowWithPost</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> name<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> resizable<span class="token punctuation">,</span> keys<span class="token punctuation">,</span> values</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> screenWidth <span class="token operator">=</span> screen<span class="token punctuation">.</span>availWidth<span class="token punctuation">,</span> screenHeight <span class="token operator">=</span> screen<span class="token punctuation">.</span>availHeight<span class="token punctuation">;</span>
        <span class="token keyword">var</span> para <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        para <span class="token operator">+=</span> <span class="token string">&#39;width=&#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>width <span class="token operator">?</span> width <span class="token operator">:</span> screenWidth <span class="token operator">-</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        para <span class="token operator">+=</span> <span class="token string">&#39;,height=&#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>height <span class="token operator">?</span> height <span class="token operator">:</span> screenHeight <span class="token operator">-</span> <span class="token number">43</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        para <span class="token operator">+=</span> <span class="token string">&#39;,left=&#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>width <span class="token operator">?</span> <span class="token punctuation">(</span>screenWidth <span class="token operator">-</span> width<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        para <span class="token operator">+=</span> <span class="token string">&#39;,top=&#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>height <span class="token operator">?</span> <span class="token punctuation">(</span>screenHeight <span class="token operator">-</span> height<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>resizable<span class="token punctuation">)</span> para <span class="token operator">+=</span> <span class="token string">&#39;,resizable = yes&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>name<span class="token punctuation">)</span> name <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">var</span> newWindow <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> para<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>newWindow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">var</span> html <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        html <span class="token operator">+=</span> <span class="token string">&quot;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;form id=&#39;formid&#39; method=&#39;post&#39; action=&#39;&quot;</span> <span class="token operator">+</span> url <span class="token operator">+</span> <span class="token string">&quot;&#39;&gt;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>keys <span class="token operator">&amp;&amp;</span> values <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>keys<span class="token punctuation">.</span>length <span class="token operator">==</span> values<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                html <span class="token operator">+=</span> <span class="token string">&quot;&lt;input type=&#39;hidden&#39; name=&#39;&quot;</span> <span class="token operator">+</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot;&#39; value=&#39;&quot;</span> <span class="token operator">+</span> values<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot;&#39;/&gt;&quot;</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        html <span class="token operator">+=</span> <span class="token string">&quot;&lt;/form&gt;&lt;script type=&#39;text/javascript&#39;&gt;document.getElementById(\\&quot;formid\\&quot;).submit()&lt;\\/script&gt;&lt;\\/body&gt;&lt;\\/html&gt;&quot;</span><span class="token punctuation">;</span>
        newWindow<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> newWindow<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-接口" tabindex="-1"><a class="header-anchor" href="#_2-接口" aria-hidden="true">#</a> 2. 接口</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/test3&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">test3Conllection</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;userName&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> userName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;测试成功！userName=&quot;</span><span class="token operator">+</span>userName<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),e=[o];function c(l,u){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","index.html.vue"]]);export{r as default};
