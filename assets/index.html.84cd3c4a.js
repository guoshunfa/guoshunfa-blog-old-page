import{_ as a,o as e,c as s,e as n}from"./app.4659d0e0.js";const r={},o=n(`<h1 id="electron框架-打包" tabindex="-1"><a class="header-anchor" href="#electron框架-打包" aria-hidden="true">#</a> Electron框架 - 打包</h1><h2 id="_1-electron-packager-打包" tabindex="-1"><a class="header-anchor" href="#_1-electron-packager-打包" aria-hidden="true">#</a> 1. electron-packager 打包</h2><p>命令说明：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>electron-packager <span class="token operator">&lt;</span>location of project<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>name of project<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>platform<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>architecture<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>electron version<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>optional options<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>location of project：项目所在路径</li><li>name of project：打包的项目名字</li><li>platform：确定了你要构建哪个平台的应用（Windows、Mac 还是 Linux），可用值：darwin、linux、mas、win32。</li><li>architecture：决定了使用 x86 还是 x64 还是两个架构都用 （x64,ia32）</li><li>electron version：electron 的版本</li><li>optional options：可选选项（ --overwrite覆盖原文件）</li><li>| --out 输出目录</li><li>| --extra-resource 需要打包的外部资源</li><li>overwrite：已有打包文件则替换。</li></ul><p>例：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>electron-packager ./ pandacode <span class="token parameter variable">--platform</span><span class="token operator">=</span>mas <span class="token parameter variable">--arch</span><span class="token operator">=</span>x64 <span class="token parameter variable">--overwrite</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),t=[o];function l(c,i){return e(),s("div",null,t)}const d=a(r,[["render",l],["__file","index.html.vue"]]);export{d as default};
