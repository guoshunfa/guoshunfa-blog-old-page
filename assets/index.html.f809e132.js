import{_ as s,r,o,c as i,a as e,b as n,d as t,e as l}from"./app.4659d0e0.js";const d={},c=l(`<h1 id="技术文档应该如何编写" tabindex="-1"><a class="header-anchor" href="#技术文档应该如何编写" aria-hidden="true">#</a> 技术文档应该如何编写</h1><h2 id="衡量技术文档好坏的标准是什么" tabindex="-1"><a class="header-anchor" href="#衡量技术文档好坏的标准是什么" aria-hidden="true">#</a> 衡量技术文档好坏的标准是什么</h2><p><img src="https://file.pandacode.cn/blog/20211220141738.png" alt=""></p><p>Martin(Bob大叔)曾在《代码整洁之道》一书打趣地说：当你的代码在做 Code Review 时，审查者要是愤怒地吼道：</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>“What the fuck <span class="token keyword">is</span> <span class="token keyword">this</span> shit<span class="token operator">?</span>”
“Dude<span class="token punctuation">,</span> What the fuck！”
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>等言辞激烈的词语时，那说明你写的代码是 Bad Code，如果审查者只是漫不经心的吐出几个</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>“What the fuck?”，
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://file.pandacode.cn/blog/20211220141839.png" alt=""></p><p>那说明你写的是 Good Code。衡量代码质量的唯一标准就<code>是每分钟骂出“WTF” 的频率</code>。</p><p>衡量文档的标准也是如此。</p><h2 id="文档编写的要点" tabindex="-1"><a class="header-anchor" href="#文档编写的要点" aria-hidden="true">#</a> 文档编写的要点</h2><p>切记，编写文档的目的是为了让读者可以快速有效地获取他想知道的信息。</p><ol><li><strong>要简单、清晰、明了</strong>。不要为了凑字数而堆字数。</li><li><strong>明确文档面向的读者和受众</strong>。根据所编写的文档，判断主要面向的受众是产品、技术、测试还是商务人员，尽量使用他们所能理解和熟悉的词汇和表达方式来表达。</li><li><strong>提供必要的信息</strong>。根据需要编写的技术类型，提供必要的信息，就像摄影拍照一样，有一些约定的摄影构图，例如：均衡式构图、对称式构图、对角线构图、三角形构图、九宫格构图等。文档也是一样，不同文档需要包含的元素、标题和部分也有所不同。然后当你熟悉 后，可灵活安排文档的内容，以最为恰当的结构形式来表达。</li><li><strong>排版与图片</strong>。尽量不要一味地只提供文字信息，这样会让读者看起来很压抑而且觉得是“天书”。应该适当留一些空行，让读者眼睛“休息”下，对读者友好一些。同时，提供一些代码片段、UML图片或相关的插图用于辅助说明。补充一些参考的文献和资料。排版上，进行分段，分章节部分，注意对重要的信息高亮、加粗、或重复说明。</li><li><strong>万事开头难</strong>。很多技术人员觉得编写文档比写代码还要难，还要头疼。其实写文档和写代码是类似的，很难一开始就写出完美的文档。应该是像写代码一样，一开始写得很丑陋，但没关系，至少有内容了。然后，可以不断重构文档，对缺少的信息补全，对多余的信息进行删除。最后觉得内容上OK的话，就可以再进行排版和修饰，补充一些图片。慢慢的，在通过用心花时间后，你的完美文档就慢慢出来了。</li><li><strong>责任心</strong>。及时更新，准确性，向后兼容。</li></ol><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>`,14),h={href:"https://segmentfault.com/a/1190000011858100",target:"_blank",rel:"noopener noreferrer"},p={href:"https://zhuanlan.zhihu.com/p/137279920",target:"_blank",rel:"noopener noreferrer"};function u(g,m){const a=r("ExternalLinkIcon");return o(),i("div",null,[c,e("ul",null,[e("li",null,[e("a",h,[n("如何写好技术文档?"),t(a)])]),e("li",null,[e("a",p,[n("程序员如何编写高大上且实用的技术文档"),t(a)])])])])}const f=s(d,[["render",u],["__file","index.html.vue"]]);export{f as default};
