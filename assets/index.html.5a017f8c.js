import{_ as r,r as a,o as n,c,a as e,b as t,d as o,e as s}from"./app.4659d0e0.js";const h={},i=e("h1",{id:"opengrok-代码阅读工具",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#opengrok-代码阅读工具","aria-hidden":"true"},"#"),t(" Opengrok 代码阅读工具")],-1),l=e("p",null,"Opengrok 在线代码阅读工具，支持代码浏览，文件名搜索等功能。",-1),p={href:"https://oracle.github.io/opengrok/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/oracle/opengrok",target:"_blank",rel:"noopener noreferrer"},k={href:"https://hub.docker.com/r/opengrok/docker/",target:"_blank",rel:"noopener noreferrer"},u=e("p",null,"最终效果：",-1),b=e("p",null,[e("img",{src:"https://file.pandacode.cn//blog/202109111304577.png",alt:"image-20210901213553911"})],-1),g=e("h2",{id:"_1-安装使用",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-安装使用","aria-hidden":"true"},"#"),t(" 1. 安装使用")],-1),m={href:"https://hub.docker.com/r/opengrok/docker/",target:"_blank",rel:"noopener noreferrer"},f=s(`<h3 id="_1-1-拉取docker镜像" tabindex="-1"><a class="header-anchor" href="#_1-1-拉取docker镜像" aria-hidden="true">#</a> 1.1. 拉取docker镜像</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull opengrok/docker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-2-运行" tabindex="-1"><a class="header-anchor" href="#_1-2-运行" aria-hidden="true">#</a> 1.2. 运行</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-v</span> <span class="token operator">&lt;</span>path/to/your/src<span class="token operator">&gt;</span>:/opengrok/src <span class="token parameter variable">-p</span> <span class="token number">8080</span>:8080 opengrok/docker:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>容器为 OpenGrok 导出端口 8080。</p><p>安装到的卷<code>/opengrok/src</code>应包含您想要搜索的项目（在子目录中）。您可以使用常见的修订控制检出（git、svn 等），而 OpenGrok 将提供历史和责任信息。</p><p>运行成功后就可以直接访问到服务了。localhost:8080</p><h2 id="_2-进阶" tabindex="-1"><a class="header-anchor" href="#_2-进阶" aria-hidden="true">#</a> 2. 进阶</h2><h3 id="_2-1-目录" tabindex="-1"><a class="header-anchor" href="#_2-1-目录" aria-hidden="true">#</a> 2.1. 目录</h3><p>该图像包含以下目录：</p><table><thead><tr><th>目录</th><th>描述</th></tr></thead><tbody><tr><td><code>/opengrok/etc</code></td><td>存储 Web 应用程序和索引器的配置</td></tr><tr><td><code>/opengrok/data</code></td><td>数据根 - 索引数据</td></tr><tr><td><code>/opengrok/src</code></td><td>源根 - 输入数据</td></tr><tr><td><code>/scripts</code></td><td>启动脚本和顶级配置。除非调试，否则不要覆盖。</td></tr></tbody></table><h3 id="_2-2-环境变量" tabindex="-1"><a class="header-anchor" href="#_2-2-环境变量" aria-hidden="true">#</a> 2.2. 环境变量</h3><table><thead><tr><th>Docker 环境变量</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td><code>SYNC_PERIOD_MINUTES</code></td><td>10</td><td>以分钟为单位的自动同步（即镜像 + 重新索引）的时间段。设置为<code>0</code>将禁用定期同步（容器启动后的同步仍将完成）。</td></tr><tr><td><code>INDEXER_OPT</code></td><td>空的</td><td>将<strong>额外的</strong>选项传递给 OpenGrok Indexer。默认的索引器选项集是：<code>--remote on -P -H -W</code>。例如，<code>-i d:vendor</code>将从<code>*/vendor/*</code>索引中删除所有文件。您可以在https://github.com/oracle/opengrok/wiki/Python-scripts-transition-guide上检查索引器选项</td></tr><tr><td><code>NOMIRROR</code></td><td>空的</td><td>为避免镜像步骤，请将变量设置为非空值。</td></tr><tr><td><code>URL_ROOT</code></td><td><code>/</code></td><td>覆盖 OpenGrok 应该运行的子 URL。</td></tr><tr><td><code>WORKERS</code></td><td>容器中的 CPU 数量</td><td>用于同步的工作人员数量（仅适用于启用项目的设置）</td></tr><tr><td><code>AVOID_PROJECTS</code></td><td>空的</td><td>在项目较少的配置中运行。设置为非空值会禁用项目。还禁用存储库同步。</td></tr><tr><td><code>REST_PORT</code></td><td>5000</td><td>简单 REST 应用程序侦听 GET 请求<code>/reindex</code>以触发手动重新索引的TCP 端口。</td></tr><tr><td><code>REST_TOKEN</code></td><td>没有任何</td><td>如果设置，REST 应用程序将需要此令牌作为不记名令牌以触发重新索引。</td></tr><tr><td><code>READONLY_CONFIG_FILE</code></td><td>没有任何</td><td>如果设置，配置将与此文件中的配置合并。这是在容器启动时运行的。</td></tr><tr><td><code>CHECK_INDEX</code></td><td>没有任何</td><td>如果设置，将首先检查索引的格式。<strong>如果索引与当前运行的版本不兼容，数据根将被清除并从头开始重新索引。</strong></td></tr></tbody></table><p>要为 指定环境变量<code>docker run</code>，请使用该<code>-e</code>选项，例如<code>-e SYNC_PERIOD_MINUTES=30</code></p>`,14);function v(E,O){const d=a("ExternalLinkIcon");return n(),c("div",null,[i,e("blockquote",null,[l,e("p",null,[e("a",p,[t("API"),o(d)]),t(" | "),e("a",_,[t("Github"),o(d)]),t(" | "),e("a",k,[t("Docker API"),o(d)])])]),u,b,g,e("p",null,[t("我是用Docker镜像的形式安装的，奉上官方"),e("a",m,[t("API"),o(d)]),t("，根据API可以更高效的完成安装，这里也简单的做一下介绍。")]),f])}const R=r(h,[["render",v],["__file","index.html.vue"]]);export{R as default};
